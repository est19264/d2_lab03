

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Aug 02 15:48:46 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	functab,global,class=ENTRY,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009C                     	;# 
   133  009D                     	;# 
   134  009E                     	;# 
   135  009F                     	;# 
   136  0105                     	;# 
   137  0107                     	;# 
   138  0108                     	;# 
   139  0109                     	;# 
   140  010C                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  0185                     	;# 
   146  0187                     	;# 
   147  0188                     	;# 
   148  0189                     	;# 
   149  018C                     	;# 
   150  018D                     	;# 
   151  0000                     	;# 
   152  0001                     	;# 
   153  0002                     	;# 
   154  0003                     	;# 
   155  0004                     	;# 
   156  0005                     	;# 
   157  0006                     	;# 
   158  0007                     	;# 
   159  0008                     	;# 
   160  0009                     	;# 
   161  000A                     	;# 
   162  000B                     	;# 
   163  000C                     	;# 
   164  000D                     	;# 
   165  000E                     	;# 
   166  000E                     	;# 
   167  000F                     	;# 
   168  0010                     	;# 
   169  0011                     	;# 
   170  0012                     	;# 
   171  0013                     	;# 
   172  0014                     	;# 
   173  0015                     	;# 
   174  0015                     	;# 
   175  0016                     	;# 
   176  0017                     	;# 
   177  0018                     	;# 
   178  0019                     	;# 
   179  001A                     	;# 
   180  001B                     	;# 
   181  001B                     	;# 
   182  001C                     	;# 
   183  001D                     	;# 
   184  001E                     	;# 
   185  001F                     	;# 
   186  0081                     	;# 
   187  0085                     	;# 
   188  0086                     	;# 
   189  0087                     	;# 
   190  0088                     	;# 
   191  0089                     	;# 
   192  008C                     	;# 
   193  008D                     	;# 
   194  008E                     	;# 
   195  008F                     	;# 
   196  0090                     	;# 
   197  0091                     	;# 
   198  0092                     	;# 
   199  0093                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0094                     	;# 
   203  0095                     	;# 
   204  0096                     	;# 
   205  0097                     	;# 
   206  0098                     	;# 
   207  0099                     	;# 
   208  009A                     	;# 
   209  009B                     	;# 
   210  009C                     	;# 
   211  009D                     	;# 
   212  009E                     	;# 
   213  009F                     	;# 
   214  0105                     	;# 
   215  0107                     	;# 
   216  0108                     	;# 
   217  0109                     	;# 
   218  010C                     	;# 
   219  010C                     	;# 
   220  010D                     	;# 
   221  010E                     	;# 
   222  010F                     	;# 
   223  0185                     	;# 
   224  0187                     	;# 
   225  0188                     	;# 
   226  0189                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0000                     	;# 
   230  0001                     	;# 
   231  0002                     	;# 
   232  0003                     	;# 
   233  0004                     	;# 
   234  0005                     	;# 
   235  0006                     	;# 
   236  0007                     	;# 
   237  0008                     	;# 
   238  0009                     	;# 
   239  000A                     	;# 
   240  000B                     	;# 
   241  000C                     	;# 
   242  000D                     	;# 
   243  000E                     	;# 
   244  000E                     	;# 
   245  000F                     	;# 
   246  0010                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001D                     	;# 
   262  001E                     	;# 
   263  001F                     	;# 
   264  0081                     	;# 
   265  0085                     	;# 
   266  0086                     	;# 
   267  0087                     	;# 
   268  0088                     	;# 
   269  0089                     	;# 
   270  008C                     	;# 
   271  008D                     	;# 
   272  008E                     	;# 
   273  008F                     	;# 
   274  0090                     	;# 
   275  0091                     	;# 
   276  0092                     	;# 
   277  0093                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0094                     	;# 
   281  0095                     	;# 
   282  0096                     	;# 
   283  0097                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009A                     	;# 
   287  009B                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  0105                     	;# 
   293  0107                     	;# 
   294  0108                     	;# 
   295  0109                     	;# 
   296  010C                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  0185                     	;# 
   302  0187                     	;# 
   303  0188                     	;# 
   304  0189                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  008F                     	;# 
   352  0090                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0098                     	;# 
   363  0099                     	;# 
   364  009A                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  0105                     	;# 
   371  0107                     	;# 
   372  0108                     	;# 
   373  0109                     	;# 
   374  010C                     	;# 
   375  010C                     	;# 
   376  010D                     	;# 
   377  010E                     	;# 
   378  010F                     	;# 
   379  0185                     	;# 
   380  0187                     	;# 
   381  0188                     	;# 
   382  0189                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385                           
   386                           	psect	strings
   387  0400                     __pstrings:
   388  0400                     stringtab:
   389  0400                     __stringtab:
   390  0400                     stringcode:	
   391                           ;	String table - string pointers are 1 byte each
   392                           
   393  0400                     stringdir:
   394  0400  3004               	movlw	high stringdir
   395  0401  008A               	movwf	10
   396  0402  0804               	movf	4,w
   397  0403  0A84               	incf	4,f
   398  0404  0782               	addwf	2,f
   399  0405                     __stringbase:
   400  0405  3400               	retlw	0
   401  0406                     __end_of__stringtab:
   402  0406                     _dpowers:
   403  0406  3401               	retlw	1
   404  0407  3400               	retlw	0
   405  0408  340A               	retlw	10
   406  0409  3400               	retlw	0
   407  040A  3464               	retlw	100
   408  040B  3400               	retlw	0
   409  040C  34E8               	retlw	232
   410  040D  3403               	retlw	3
   411  040E  3410               	retlw	16
   412  040F  3427               	retlw	39
   413  0410                     __end_of_dpowers:
   414  0013                     _SSPBUF	set	19
   415  0014                     _SSPCON	set	20
   416  001F                     _ADCON0bits	set	31
   417  001A                     _RCREG	set	26
   418  0019                     _TXREG	set	25
   419  000C                     _PIR1bits	set	12
   420  0018                     _RCSTAbits	set	24
   421  0008                     _PORTD	set	8
   422  0007                     _PORTC	set	7
   423  0006                     _PORTB	set	6
   424  0007                     _PORTCbits	set	7
   425  0064                     _TXIF	set	100
   426  0065                     _RCIF	set	101
   427  0094                     _SSPSTATbits	set	148
   428  0094                     _SSPSTAT	set	148
   429  009F                     _ADCON1bits	set	159
   430  008F                     _OSCCONbits	set	143
   431  009A                     _SPBRGH	set	154
   432  0099                     _SPBRG	set	153
   433  0098                     _TXSTAbits	set	152
   434  0086                     _TRISB	set	134
   435  043B                     _TRISC3	set	1083
   436  043D                     _TRISC5	set	1085
   437  043A                     _TRISC2	set	1082
   438  0187                     _BAUDCTLbits	set	391
   439  0189                     _ANSELH	set	393
   440  0188                     _ANSEL	set	392
   441  0410                     STR_8:
   442  0410  3444               	retlw	68	;'D'
   443  0411  3465               	retlw	101	;'e'
   444  0412  3462               	retlw	98	;'b'
   445  0413  3465               	retlw	101	;'e'
   446  0414  3420               	retlw	32	;' '
   447  0415  3465               	retlw	101	;'e'
   448  0416  3473               	retlw	115	;'s'
   449  0417  3463               	retlw	99	;'c'
   450  0418  3472               	retlw	114	;'r'
   451  0419  3469               	retlw	105	;'i'
   452  041A  3462               	retlw	98	;'b'
   453  041B  3469               	retlw	105	;'i'
   454  041C  3472               	retlw	114	;'r'
   455  041D  3420               	retlw	32	;' '
   456  041E  3474               	retlw	116	;'t'
   457  041F  3472               	retlw	114	;'r'
   458  0420  3465               	retlw	101	;'e'
   459  0421  3473               	retlw	115	;'s'
   460  0422  3420               	retlw	32	;' '
   461  0423  346E               	retlw	110	;'n'
   462  0424  3475               	retlw	117	;'u'
   463  0425  346D               	retlw	109	;'m'
   464  0426  3465               	retlw	101	;'e'
   465  0427  3472               	retlw	114	;'r'
   466  0428  346F               	retlw	111	;'o'
   467  0429  3473               	retlw	115	;'s'
   468  042A  3420               	retlw	32	;' '
   469  042B  3471               	retlw	113	;'q'
   470  042C  3475               	retlw	117	;'u'
   471  042D  3465               	retlw	101	;'e'
   472  042E  3420               	retlw	32	;' '
   473  042F  3466               	retlw	102	;'f'
   474  0430  346F               	retlw	111	;'o'
   475  0431  3472               	retlw	114	;'r'
   476  0432  346D               	retlw	109	;'m'
   477  0433  3465               	retlw	101	;'e'
   478  0434  346E               	retlw	110	;'n'
   479  0435  3420               	retlw	32	;' '
   480  0436  3475               	retlw	117	;'u'
   481  0437  346E               	retlw	110	;'n'
   482  0438  3420               	retlw	32	;' '
   483  0439  3476               	retlw	118	;'v'
   484  043A  3461               	retlw	97	;'a'
   485  043B  346C               	retlw	108	;'l'
   486  043C  346F               	retlw	111	;'o'
   487  043D  3472               	retlw	114	;'r'
   488  043E  3420               	retlw	32	;' '
   489  043F  3465               	retlw	101	;'e'
   490  0440  346E               	retlw	110	;'n'
   491  0441  3474               	retlw	116	;'t'
   492  0442  3472               	retlw	114	;'r'
   493  0443  3465               	retlw	101	;'e'
   494  0444  3420               	retlw	32	;' '
   495  0445  3430               	retlw	48	;'0'
   496  0446  3420               	retlw	32	;' '
   497  0447  3479               	retlw	121	;'y'
   498  0448  3420               	retlw	32	;' '
   499  0449  3432               	retlw	50	;'2'
   500  044A  3435               	retlw	53	;'5'
   501  044B  3435               	retlw	53	;'5'
   502  044C  340D               	retlw	13
   503  044D  3400               	retlw	0
   504  044E                     STR_7:
   505  044E  3449               	retlw	73	;'I'
   506  044F  346E               	retlw	110	;'n'
   507  0450  3467               	retlw	103	;'g'
   508  0451  3472               	retlw	114	;'r'
   509  0452  3465               	retlw	101	;'e'
   510  0453  3473               	retlw	115	;'s'
   511  0454  3461               	retlw	97	;'a'
   512  0455  3472               	retlw	114	;'r'
   513  0456  3420               	retlw	32	;' '
   514  0457  3465               	retlw	101	;'e'
   515  0458  346C               	retlw	108	;'l'
   516  0459  3420               	retlw	32	;' '
   517  045A  3476               	retlw	118	;'v'
   518  045B  3461               	retlw	97	;'a'
   519  045C  346C               	retlw	108	;'l'
   520  045D  346F               	retlw	111	;'o'
   521  045E  3472               	retlw	114	;'r'
   522  045F  3420               	retlw	32	;' '
   523  0460  3464               	retlw	100	;'d'
   524  0461  3465               	retlw	101	;'e'
   525  0462  346C               	retlw	108	;'l'
   526  0463  3420               	retlw	32	;' '
   527  0464  3463               	retlw	99	;'c'
   528  0465  346F               	retlw	111	;'o'
   529  0466  346E               	retlw	110	;'n'
   530  0467  3474               	retlw	116	;'t'
   531  0468  3461               	retlw	97	;'a'
   532  0469  3464               	retlw	100	;'d'
   533  046A  346F               	retlw	111	;'o'
   534  046B  3472               	retlw	114	;'r'
   535  046C  343A               	retlw	58	;':'
   536  046D  3420               	retlw	32	;' '
   537  046E  3428               	retlw	40	;'('
   538  046F  3444               	retlw	68	;'D'
   539  0470  3465               	retlw	101	;'e'
   540  0471  3462               	retlw	98	;'b'
   541  0472  3465               	retlw	101	;'e'
   542  0473  3420               	retlw	32	;' '
   543  0474  3473               	retlw	115	;'s'
   544  0475  3465               	retlw	101	;'e'
   545  0476  3472               	retlw	114	;'r'
   546  0477  3420               	retlw	32	;' '
   547  0478  3465               	retlw	101	;'e'
   548  0479  346E               	retlw	110	;'n'
   549  047A  3474               	retlw	116	;'t'
   550  047B  3472               	retlw	114	;'r'
   551  047C  3465               	retlw	101	;'e'
   552  047D  3420               	retlw	32	;' '
   553  047E  3430               	retlw	48	;'0'
   554  047F  3420               	retlw	32	;' '
   555  0480  3479               	retlw	121	;'y'
   556  0481  3420               	retlw	32	;' '
   557  0482  3432               	retlw	50	;'2'
   558  0483  3435               	retlw	53	;'5'
   559  0484  3435               	retlw	53	;'5'
   560  0485  3429               	retlw	41	;')'
   561  0486  340D               	retlw	13
   562  0487  3400               	retlw	0
   563  0488                     STR_4:
   564  0488  340D               	retlw	13
   565  0489  3420               	retlw	32	;' '
   566  048A  3456               	retlw	86	;'V'
   567  048B  3461               	retlw	97	;'a'
   568  048C  346C               	retlw	108	;'l'
   569  048D  346F               	retlw	111	;'o'
   570  048E  3472               	retlw	114	;'r'
   571  048F  3420               	retlw	32	;' '
   572  0490  3464               	retlw	100	;'d'
   573  0491  3465               	retlw	101	;'e'
   574  0492  346C               	retlw	108	;'l'
   575  0493  3420               	retlw	32	;' '
   576  0494  3450               	retlw	80	;'P'
   577  0495  346F               	retlw	111	;'o'
   578  0496  3474               	retlw	116	;'t'
   579  0497  3465               	retlw	101	;'e'
   580  0498  346E               	retlw	110	;'n'
   581  0499  3463               	retlw	99	;'c'
   582  049A  3469               	retlw	105	;'i'
   583  049B  346F               	retlw	111	;'o'
   584  049C  346D               	retlw	109	;'m'
   585  049D  3465               	retlw	101	;'e'
   586  049E  3474               	retlw	116	;'t'
   587  049F  3472               	retlw	114	;'r'
   588  04A0  346F               	retlw	111	;'o'
   589  04A1  3420               	retlw	32	;' '
   590  04A2  3432               	retlw	50	;'2'
   591  04A3  343A               	retlw	58	;':'
   592  04A4  3420               	retlw	32	;' '
   593  04A5  340D               	retlw	13
   594  04A6  3400               	retlw	0
   595  04A7                     STR_1:
   596  04A7  340D               	retlw	13
   597  04A8  3420               	retlw	32	;' '
   598  04A9  3456               	retlw	86	;'V'
   599  04AA  3461               	retlw	97	;'a'
   600  04AB  346C               	retlw	108	;'l'
   601  04AC  346F               	retlw	111	;'o'
   602  04AD  3472               	retlw	114	;'r'
   603  04AE  3420               	retlw	32	;' '
   604  04AF  3464               	retlw	100	;'d'
   605  04B0  3465               	retlw	101	;'e'
   606  04B1  346C               	retlw	108	;'l'
   607  04B2  3420               	retlw	32	;' '
   608  04B3  3450               	retlw	80	;'P'
   609  04B4  346F               	retlw	111	;'o'
   610  04B5  3474               	retlw	116	;'t'
   611  04B6  3465               	retlw	101	;'e'
   612  04B7  346E               	retlw	110	;'n'
   613  04B8  3463               	retlw	99	;'c'
   614  04B9  3469               	retlw	105	;'i'
   615  04BA  346F               	retlw	111	;'o'
   616  04BB  346D               	retlw	109	;'m'
   617  04BC  3465               	retlw	101	;'e'
   618  04BD  3474               	retlw	116	;'t'
   619  04BE  3472               	retlw	114	;'r'
   620  04BF  346F               	retlw	111	;'o'
   621  04C0  3420               	retlw	32	;' '
   622  04C1  3431               	retlw	49	;'1'
   623  04C2  343A               	retlw	58	;':'
   624  04C3  340D               	retlw	13
   625  04C4  3400               	retlw	0
   626  04C5                     STR_9:
   627  04C5  3445               	retlw	69	;'E'
   628  04C6  346C               	retlw	108	;'l'
   629  04C7  3420               	retlw	32	;' '
   630  04C8  346E               	retlw	110	;'n'
   631  04C9  3475               	retlw	117	;'u'
   632  04CA  346D               	retlw	109	;'m'
   633  04CB  3465               	retlw	101	;'e'
   634  04CC  3472               	retlw	114	;'r'
   635  04CD  346F               	retlw	111	;'o'
   636  04CE  3420               	retlw	32	;' '
   637  04CF  3465               	retlw	101	;'e'
   638  04D0  346C               	retlw	108	;'l'
   639  04D1  3465               	retlw	101	;'e'
   640  04D2  3467               	retlw	103	;'g'
   641  04D3  3469               	retlw	105	;'i'
   642  04D4  3464               	retlw	100	;'d'
   643  04D5  346F               	retlw	111	;'o'
   644  04D6  3420               	retlw	32	;' '
   645  04D7  3465               	retlw	101	;'e'
   646  04D8  3473               	retlw	115	;'s'
   647  04D9  343A               	retlw	58	;':'
   648  04DA  3420               	retlw	32	;' '
   649  04DB  3425               	retlw	37	;'%'
   650  04DC  3464               	retlw	100	;'d'
   651  04DD  3400               	retlw	0
   652  04DE                     STR_2:
   653  04DE  3420               	retlw	32	;' '
   654  04DF  3456               	retlw	86	;'V'
   655  04E0  3400               	retlw	0
   656  04A5                     
   657                           	psect	cinit
   658  000F                     start_initialization:	
   659                           ; #config settings
   660                           
   661  000F                     __initialization:
   662                           
   663                           ; Clear objects allocated to COMMON
   664  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   665  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   666                           
   667                           ; Clear objects allocated to BANK0
   668  0011  1283               	bcf	3,5	;RP0=0, select bank0
   669  0012  1303               	bcf	3,6	;RP1=0, select bank0
   670  0013  01EA               	clrf	__pbssBANK0& (0+127)
   671  0014  01EB               	clrf	(__pbssBANK0+1)& (0+127)
   672  0015  01EC               	clrf	(__pbssBANK0+2)& (0+127)
   673                           
   674                           ; Clear objects allocated to BANK1
   675  0016  1683               	bsf	3,5	;RP0=1, select bank1
   676  0017  1303               	bcf	3,6	;RP1=0, select bank1
   677  0018  01A0               	clrf	__pbssBANK1& (0+127)
   678  0019  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   679  001A  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   680  001B  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   681  001C  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   682  001D  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   683  001E  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   684  001F  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   685  0020  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   686  0021  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   687  0022                     end_of_initialization:	
   688                           ;End of C runtime variable initialization code
   689                           
   690  0022                     __end_of__initialization:
   691  0022  0183               	clrf	3
   692  0023  120A  118A  2E38   	ljmp	_main	;jump to C main() function
   693                           
   694                           	psect	bssCOMMON
   695  007A                     __pbssCOMMON:
   696  007A                     _tens:
   697  007A                     	ds	1
   698  007B                     _hundreds:
   699  007B                     	ds	1
   700                           
   701                           	psect	bssBANK0
   702  006A                     __pbssBANK0:
   703  006A                     _cen:
   704  006A                     	ds	1
   705  006B                     _residuo:
   706  006B                     	ds	1
   707  006C                     _units:
   708  006C                     	ds	1
   709                           
   710                           	psect	bssBANK1
   711  00A0                     __pbssBANK1:
   712  00A0                     _full:
   713  00A0                     	ds	2
   714  00A2                     _contador:
   715  00A2                     	ds	2
   716  00A4                     _con:
   717  00A4                     	ds	1
   718  00A5                     _var:
   719  00A5                     	ds	1
   720  00A6                     _uni:
   721  00A6                     	ds	1
   722  00A7                     _dec:
   723  00A7                     	ds	1
   724  00A8                     _pot2:
   725  00A8                     	ds	1
   726  00A9                     _pot1:
   727  00A9                     	ds	1
   728                           
   729                           	psect	cstackBANK1
   730  00AA                     __pcstackBANK1:
   731  00AA                     ??_mensaje:
   732                           
   733                           ; 1 bytes @ 0x0
   734  00AA                     	ds	5
   735                           
   736                           	psect	cstackCOMMON
   737  0070                     __pcstackCOMMON:
   738  0070                     ?_isdigit:
   739  0070                     ?_setup:	
   740                           ; 1 bit 
   741                           
   742  0070                     ?_spiWrite:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0070                     ?_spiRead:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0070                     ?_mensaje:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0070                     ?_isr:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0070                     ??_isr:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0070                     ?_main:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0070                     ?_division:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     ?_spiReceiveWait:	
   764                           ; 1 bytes @ 0x0
   765                           
   766                           
   767                           ; 1 bytes @ 0x0
   768  0070                     	ds	2
   769  0072                     ??_spiWrite:
   770  0072                     ??_spiRead:	
   771                           ; 1 bytes @ 0x2
   772                           
   773  0072                     ?_spiInit:	
   774                           ; 1 bytes @ 0x2
   775                           
   776  0072                     ?_strcat:	
   777                           ; 1 bytes @ 0x2
   778                           
   779  0072                     ??_isdigit:	
   780                           ; 1 bytes @ 0x2
   781                           
   782  0072                     ?_putch:	
   783                           ; 1 bytes @ 0x2
   784                           
   785  0072                     ??_spiReceiveWait:	
   786                           ; 1 bytes @ 0x2
   787                           
   788  0072                     ?___wmul:	
   789                           ; 1 bytes @ 0x2
   790                           
   791  0072                     ?___awdiv:	
   792                           ; 2 bytes @ 0x2
   793                           
   794  0072                     ?___awmod:	
   795                           ; 2 bytes @ 0x2
   796                           
   797  0072                     ?___lwdiv:	
   798                           ; 2 bytes @ 0x2
   799                           
   800  0072                     putch@data:	
   801                           ; 2 bytes @ 0x2
   802                           
   803  0072                     spiInit@sDataSample:	
   804                           ; 1 bytes @ 0x2
   805                           
   806  0072                     spiWrite@dat:	
   807                           ; 1 bytes @ 0x2
   808                           
   809  0072                     _isdigit$1034:	
   810                           ; 1 bytes @ 0x2
   811                           
   812  0072                     strcat@from:	
   813                           ; 1 bytes @ 0x2
   814                           
   815  0072                     ___wmul@multiplier:	
   816                           ; 1 bytes @ 0x2
   817                           
   818  0072                     ___awdiv@divisor:	
   819                           ; 2 bytes @ 0x2
   820                           
   821  0072                     ___awmod@divisor:	
   822                           ; 2 bytes @ 0x2
   823                           
   824  0072                     ___lwdiv@divisor:	
   825                           ; 2 bytes @ 0x2
   826                           
   827                           
   828                           ; 2 bytes @ 0x2
   829  0072                     	ds	1
   830  0073                     ??_strcat:
   831  0073                     ??_putch:	
   832                           ; 1 bytes @ 0x3
   833                           
   834  0073                     spiInit@sClockIdle:	
   835                           ; 1 bytes @ 0x3
   836                           
   837  0073                     isdigit@c:	
   838                           ; 1 bytes @ 0x3
   839                           
   840                           
   841                           ; 1 bytes @ 0x3
   842  0073                     	ds	1
   843  0074                     spiInit@sTransmitEdge:
   844  0074                     strcat@to:	
   845                           ; 1 bytes @ 0x4
   846                           
   847  0074                     ___wmul@multiplicand:	
   848                           ; 1 bytes @ 0x4
   849                           
   850  0074                     ___awdiv@dividend:	
   851                           ; 2 bytes @ 0x4
   852                           
   853  0074                     ___awmod@dividend:	
   854                           ; 2 bytes @ 0x4
   855                           
   856  0074                     ___lwdiv@dividend:	
   857                           ; 2 bytes @ 0x4
   858                           
   859                           
   860                           ; 2 bytes @ 0x4
   861  0074                     	ds	1
   862  0075                     ??_spiInit:
   863  0075                     spiInit@sType:	
   864                           ; 1 bytes @ 0x5
   865                           
   866  0075                     strcat@cp:	
   867                           ; 1 bytes @ 0x5
   868                           
   869                           
   870                           ; 1 bytes @ 0x5
   871  0075                     	ds	1
   872  0076                     ??_setup:
   873  0076                     ??___wmul:	
   874                           ; 1 bytes @ 0x6
   875                           
   876  0076                     ??___awdiv:	
   877                           ; 1 bytes @ 0x6
   878                           
   879  0076                     ??___awmod:	
   880                           ; 1 bytes @ 0x6
   881                           
   882  0076                     ??___lwdiv:	
   883                           ; 1 bytes @ 0x6
   884                           
   885  0076                     ___wmul@product:	
   886                           ; 1 bytes @ 0x6
   887                           
   888                           
   889                           ; 2 bytes @ 0x6
   890  0076                     	ds	1
   891  0077                     ___awmod@counter:
   892  0077                     ___lwdiv@quotient:	
   893                           ; 1 bytes @ 0x7
   894                           
   895                           
   896                           ; 2 bytes @ 0x7
   897  0077                     	ds	1
   898  0078                     ?_atoi:
   899  0078                     ___awmod@sign:	
   900                           ; 2 bytes @ 0x8
   901                           
   902                           
   903                           ; 1 bytes @ 0x8
   904  0078                     	ds	1
   905  0079                     division@valor:
   906  0079                     ___lwdiv@counter:	
   907                           ; 1 bytes @ 0x9
   908                           
   909                           
   910                           ; 1 bytes @ 0x9
   911  0079                     	ds	1
   912                           
   913                           	psect	cstackBANK0
   914  0020                     __pcstackBANK0:
   915  0020                     ??_atoi:
   916  0020                     ?___lwmod:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0020                     ___awdiv@counter:	
   920                           ; 2 bytes @ 0x0
   921                           
   922  0020                     ___lwmod@divisor:	
   923                           ; 1 bytes @ 0x0
   924                           
   925                           
   926                           ; 2 bytes @ 0x0
   927  0020                     	ds	1
   928  0021                     ___awdiv@sign:
   929                           
   930                           ; 1 bytes @ 0x1
   931  0021                     	ds	1
   932  0022                     atoi@sign:
   933  0022                     ___awdiv@quotient:	
   934                           ; 1 bytes @ 0x2
   935                           
   936  0022                     ___lwmod@dividend:	
   937                           ; 2 bytes @ 0x2
   938                           
   939                           
   940                           ; 2 bytes @ 0x2
   941  0022                     	ds	1
   942  0023                     atoi@a:
   943                           
   944                           ; 2 bytes @ 0x3
   945  0023                     	ds	1
   946  0024                     ??_division:
   947  0024                     ??___lwmod:	
   948                           ; 1 bytes @ 0x4
   949                           
   950                           
   951                           ; 1 bytes @ 0x4
   952  0024                     	ds	1
   953  0025                     ___lwmod@counter:
   954  0025                     atoi@s:	
   955                           ; 1 bytes @ 0x5
   956                           
   957                           
   958                           ; 1 bytes @ 0x5
   959  0025                     	ds	1
   960  0026                     ?__doprnt:
   961  0026                     __doprnt@f:	
   962                           ; 2 bytes @ 0x6
   963                           
   964                           
   965                           ; 1 bytes @ 0x6
   966  0026                     	ds	1
   967  0027                     __doprnt@ap:
   968                           
   969                           ; 1 bytes @ 0x7
   970  0027                     	ds	1
   971  0028                     ??__doprnt:
   972                           
   973                           ; 1 bytes @ 0x8
   974  0028                     	ds	3
   975  002B                     __doprnt@flag:
   976                           
   977                           ; 1 bytes @ 0xB
   978  002B                     	ds	1
   979  002C                     __doprnt@prec:
   980                           
   981                           ; 1 bytes @ 0xC
   982  002C                     	ds	1
   983  002D                     __doprnt@val:
   984                           
   985                           ; 2 bytes @ 0xD
   986  002D                     	ds	2
   987  002F                     __doprnt@c:
   988                           
   989                           ; 1 bytes @ 0xF
   990  002F                     	ds	1
   991  0030                     __doprnt@pb:
   992                           
   993                           ; 1 bytes @ 0x10
   994  0030                     	ds	1
   995  0031                     ?_printf:
   996  0031                     ?_sprintf:	
   997                           ; 2 bytes @ 0x11
   998                           
   999  0031                     sprintf@f:	
  1000                           ; 2 bytes @ 0x11
  1001                           
  1002                           
  1003                           ; 1 bytes @ 0x11
  1004  0031                     	ds	2
  1005  0033                     ??_printf:
  1006                           
  1007                           ; 1 bytes @ 0x13
  1008  0033                     	ds	1
  1009  0034                     ??_sprintf:
  1010                           
  1011                           ; 1 bytes @ 0x14
  1012  0034                     	ds	1
  1013  0035                     printf@ap:
  1014                           
  1015                           ; 1 bytes @ 0x15
  1016  0035                     	ds	1
  1017  0036                     printf@f:
  1018  0036                     sprintf@wh:	
  1019                           ; 1 bytes @ 0x16
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x16
  1023  0036                     	ds	1
  1024  0037                     sprintf@ap:
  1025  0037                     printf@pb:	
  1026                           ; 1 bytes @ 0x17
  1027                           
  1028                           
  1029                           ; 2 bytes @ 0x17
  1030  0037                     	ds	1
  1031  0038                     sprintf@pb:
  1032                           
  1033                           ; 2 bytes @ 0x18
  1034  0038                     	ds	2
  1035  003A                     ?_concat:
  1036  003A                     concat@a:	
  1037                           ; 2 bytes @ 0x1A
  1038                           
  1039                           
  1040                           ; 2 bytes @ 0x1A
  1041  003A                     	ds	2
  1042  003C                     concat@b:
  1043                           
  1044                           ; 2 bytes @ 0x1C
  1045  003C                     	ds	2
  1046  003E                     ??_concat:
  1047                           
  1048                           ; 1 bytes @ 0x1E
  1049  003E                     	ds	1
  1050  003F                     concat@s2:
  1051                           
  1052                           ; 20 bytes @ 0x1F
  1053  003F                     	ds	20
  1054  0053                     concat@s1:
  1055                           
  1056                           ; 20 bytes @ 0x33
  1057  0053                     	ds	20
  1058  0067                     concat@c:
  1059                           
  1060                           ; 2 bytes @ 0x47
  1061  0067                     	ds	2
  1062  0069                     ??_main:
  1063                           
  1064                           ; 1 bytes @ 0x49
  1065  0069                     	ds	1
  1066                           
  1067                           	psect	maintext
  1068  0638                     __pmaintext:	
  1069 ;;
  1070 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1071 ;;
  1072 ;; *************** function _main *****************
  1073 ;; Defined at:
  1074 ;;		line 79 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : B00/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0
  1090 ;;      Temps:          0       1       0       0       0
  1091 ;;      Totals:         0       1       0       0       0
  1092 ;;Total ram usage:        1 bytes
  1093 ;; Hardware stack levels required when called:    6
  1094 ;; This function calls:
  1095 ;;		_mensaje
  1096 ;;		_setup
  1097 ;;		_spiRead
  1098 ;;		_spiWrite
  1099 ;; This function is called by:
  1100 ;;		Startup code after reset
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _main
  1106  0638                     _main:
  1107  0638                     l2248:	
  1108                           ;incstack = 0
  1109                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1110                           
  1111                           
  1112                           ;main.c: 81:     setup();
  1113  0638  120A  118A  27AC  120A  118A  	fcall	_setup
  1114  063D                     l2250:
  1115                           
  1116                           ;main.c: 85:     {;main.c: 88:     PORTCbits.RC2 = 0;
  1117  063D  1283               	bcf	3,5	;RP0=0, select bank0
  1118  063E  1303               	bcf	3,6	;RP1=0, select bank0
  1119  063F  1107               	bcf	7,2	;volatile
  1120  0640                     l2252:
  1121                           
  1122                           ;main.c: 89:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1123  0640  30C7               	movlw	199
  1124  0641  1283               	bcf	3,5	;RP0=0, select bank0
  1125  0642  1303               	bcf	3,6	;RP1=0, select bank0
  1126  0643  00E9               	movwf	??_main
  1127  0644                     u1787:
  1128  0644  2E45               	nop2
  1129  0645  0BE9               	decfsz	??_main,f
  1130  0646  2E44               	goto	u1787
  1131  0647  2E48               	nop2
  1132  0648                     l2254:
  1133                           
  1134                           ;main.c: 91:        spiWrite(0x0A);
  1135  0648  300A               	movlw	10
  1136  0649  120A  158A  27E1  120A  118A  	fcall	_spiWrite
  1137  064E                     l2256:
  1138                           
  1139                           ;main.c: 92:        pot1 = spiRead();
  1140  064E  120A  158A  27F7  120A  118A  	fcall	_spiRead
  1141  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0655  00E9               	movwf	??_main
  1144  0656  0869               	movf	??_main,w
  1145  0657  1683               	bsf	3,5	;RP0=1, select bank1
  1146  0658  1303               	bcf	3,6	;RP1=0, select bank1
  1147  0659  00A9               	movwf	_pot1^(0+128)
  1148  065A                     l2258:
  1149                           
  1150                           ;main.c: 93:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1151  065A  30C7               	movlw	199
  1152  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1153  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1154  065D  00E9               	movwf	??_main
  1155  065E                     u1797:
  1156  065E  2E5F               	nop2
  1157  065F  0BE9               	decfsz	??_main,f
  1158  0660  2E5E               	goto	u1797
  1159  0661  2E62               	nop2
  1160                           
  1161                           ;main.c: 94:        spiWrite(0x0A);
  1162  0662  300A               	movlw	10
  1163  0663  120A  158A  27E1  120A  118A  	fcall	_spiWrite
  1164                           
  1165                           ;main.c: 95:        pot2 = spiRead();
  1166  0668  120A  158A  27F7  120A  118A  	fcall	_spiRead
  1167  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1168  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1169  066F  00E9               	movwf	??_main
  1170  0670  0869               	movf	??_main,w
  1171  0671  1683               	bsf	3,5	;RP0=1, select bank1
  1172  0672  1303               	bcf	3,6	;RP1=0, select bank1
  1173  0673  00A8               	movwf	_pot2^(0+128)
  1174  0674                     l2260:
  1175                           
  1176                           ;main.c: 96:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1177  0674  30C7               	movlw	199
  1178  0675  1283               	bcf	3,5	;RP0=0, select bank0
  1179  0676  1303               	bcf	3,6	;RP1=0, select bank0
  1180  0677  00E9               	movwf	??_main
  1181  0678                     u1807:
  1182  0678  2E79               	nop2
  1183  0679  0BE9               	decfsz	??_main,f
  1184  067A  2E78               	goto	u1807
  1185  067B  2E7C               	nop2
  1186  067C                     l2262:
  1187                           
  1188                           ;main.c: 99:        _delay((unsigned long)((1)*(4000000/4000.0)));
  1189  067C  30C7               	movlw	199
  1190  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1191  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1192  067F  00E9               	movwf	??_main
  1193  0680                     u1817:
  1194  0680  2E81               	nop2
  1195  0681  0BE9               	decfsz	??_main,f
  1196  0682  2E80               	goto	u1817
  1197  0683  2E84               	nop2
  1198  0684                     l2264:
  1199                           
  1200                           ;main.c: 100:        PORTCbits.RC2 = 1;
  1201  0684  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0685  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0686  1507               	bsf	7,2	;volatile
  1204  0687                     l2266:
  1205                           
  1206                           ;main.c: 101:        mensaje();
  1207  0687  120A  118A  202F  120A  118A  	fcall	_mensaje
  1208  068C                     l2268:
  1209                           
  1210                           ;main.c: 103:        PORTB = full;
  1211  068C  1683               	bsf	3,5	;RP0=1, select bank1
  1212  068D  1303               	bcf	3,6	;RP1=0, select bank1
  1213  068E  0820               	movf	_full^(0+128),w
  1214  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1215  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1216  0691  0086               	movwf	6	;volatile
  1217  0692  2E3D               	goto	l2250
  1218  0693  120A  118A  280C   	ljmp	start
  1219  0696                     __end_of_main:
  1220                           
  1221                           	psect	text1
  1222  0FE1                     __ptext1:	
  1223 ;; *************** function _spiWrite *****************
  1224 ;; Defined at:
  1225 ;;		line 34 in file "SPI.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  dat             1    wreg     unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  dat             1    2[COMMON] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         1       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0
  1242 ;;      Totals:         1       0       0       0       0
  1243 ;;Total ram usage:        1 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    1
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_main
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           
  1254                           ;psect for function _spiWrite
  1255  0FE1                     _spiWrite:
  1256                           
  1257                           ;incstack = 0
  1258                           ; Regs used in _spiWrite: [wreg]
  1259                           ;spiWrite@dat stored from wreg
  1260  0FE1  00F2               	movwf	spiWrite@dat
  1261  0FE2                     l1818:
  1262                           
  1263                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1264  0FE2  0872               	movf	spiWrite@dat,w
  1265  0FE3  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0FE4  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0FE5  0093               	movwf	19	;volatile
  1268  0FE6                     l181:
  1269  0FE6  0008               	return
  1270  0FE7                     __end_of_spiWrite:
  1271                           
  1272                           	psect	text2
  1273  0FF7                     __ptext2:	
  1274 ;; *************** function _spiRead *****************
  1275 ;; Defined at:
  1276 ;;		line 47 in file "SPI.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      unsigned char 
  1283 ;; Registers used:
  1284 ;;		wreg, status,2, status,0, pclath, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1290 ;;      Params:         0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0
  1293 ;;      Totals:         0       0       0       0       0
  1294 ;;Total ram usage:        0 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; Hardware stack levels required when called:    2
  1297 ;; This function calls:
  1298 ;;		_spiReceiveWait
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           
  1305                           ;psect for function _spiRead
  1306  0FF7                     _spiRead:
  1307  0FF7                     l1820:	
  1308                           ;incstack = 0
  1309                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1310                           
  1311                           
  1312                           ;SPI.c: 49:     spiReceiveWait();
  1313  0FF7  120A  118A  23F9  120A  158A  	fcall	_spiReceiveWait
  1314  0FFC                     l1822:
  1315                           
  1316                           ;SPI.c: 50:     return(SSPBUF);
  1317  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0FFE  0813               	movf	19,w	;volatile
  1320  0FFF                     l189:
  1321  0FFF  0008               	return
  1322  1000                     __end_of_spiRead:
  1323                           
  1324                           	psect	text3
  1325  03F9                     __ptext3:	
  1326 ;; *************** function _spiReceiveWait *****************
  1327 ;; Defined at:
  1328 ;;		line 29 in file "SPI.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		None
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       0       0       0       0
  1343 ;;      Locals:         0       0       0       0       0
  1344 ;;      Temps:          0       0       0       0       0
  1345 ;;      Totals:         0       0       0       0       0
  1346 ;;Total ram usage:        0 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_spiRead
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           
  1357                           ;psect for function _spiReceiveWait
  1358  03F9                     _spiReceiveWait:
  1359  03F9                     l1776:	
  1360                           ;incstack = 0
  1361                           ; Regs used in _spiReceiveWait: []
  1362                           
  1363  03F9                     l175:	
  1364                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1365                           
  1366  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  1367  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  1368  03FB  1C14               	btfss	20,0	;volatile
  1369  03FC  2BFE               	goto	u1271
  1370  03FD  2BFF               	goto	u1270
  1371  03FE                     u1271:
  1372  03FE  2BF9               	goto	l175
  1373  03FF                     u1270:
  1374  03FF                     l178:
  1375  03FF  0008               	return
  1376  0400                     __end_of_spiReceiveWait:
  1377                           
  1378                           	psect	text4
  1379  07AC                     __ptext4:	
  1380 ;; *************** function _setup *****************
  1381 ;; Defined at:
  1382 ;;		line 112 in file "main.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, pclath, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    2
  1403 ;; This function calls:
  1404 ;;		_spiInit
  1405 ;; This function is called by:
  1406 ;;		_main
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           
  1411                           ;psect for function _setup
  1412  07AC                     _setup:
  1413  07AC                     l1778:	
  1414                           ;incstack = 0
  1415                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1416                           
  1417                           
  1418                           ;main.c: 114:     ANSEL = 0;
  1419  07AC  1683               	bsf	3,5	;RP0=1, select bank3
  1420  07AD  1703               	bsf	3,6	;RP1=1, select bank3
  1421  07AE  0188               	clrf	8	;volatile
  1422                           
  1423                           ;main.c: 115:     ANSELH = 0;
  1424  07AF  0189               	clrf	9	;volatile
  1425  07B0                     l1780:
  1426                           
  1427                           ;main.c: 116:     TRISC2 = 0;
  1428  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  1429  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  1430  07B2  1107               	bcf	7,2	;volatile
  1431                           
  1432                           ;main.c: 117:     TRISB = 0;
  1433  07B3  0186               	clrf	6	;volatile
  1434                           
  1435                           ;main.c: 118:     PORTB = 0;
  1436  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  1437  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  1438  07B6  0186               	clrf	6	;volatile
  1439                           
  1440                           ;main.c: 119:     PORTC = 0;
  1441  07B7  0187               	clrf	7	;volatile
  1442                           
  1443                           ;main.c: 120:     PORTD = 0;
  1444  07B8  0188               	clrf	8	;volatile
  1445  07B9                     l1782:
  1446                           
  1447                           ;main.c: 121:     PORTCbits.RC2 = 1;
  1448  07B9  1507               	bsf	7,2	;volatile
  1449  07BA                     l1784:
  1450                           
  1451                           ;main.c: 122:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE,
  1452  07BA  01F2               	clrf	spiInit@sDataSample
  1453  07BB  01F3               	clrf	spiInit@sClockIdle
  1454  07BC  01F4               	clrf	spiInit@sTransmitEdge
  1455  07BD  3020               	movlw	32
  1456  07BE  120A  118A  23D1  120A  118A  	fcall	_spiInit
  1457  07C3                     l1786:
  1458                           
  1459                           ;main.c: 126:     TXSTAbits.SYNC = 0;
  1460  07C3  1683               	bsf	3,5	;RP0=1, select bank1
  1461  07C4  1303               	bcf	3,6	;RP1=0, select bank1
  1462  07C5  1218               	bcf	24,4	;volatile
  1463  07C6                     l1788:
  1464                           
  1465                           ;main.c: 127:     TXSTAbits.BRGH = 1;
  1466  07C6  1518               	bsf	24,2	;volatile
  1467  07C7                     l1790:
  1468                           
  1469                           ;main.c: 128:     BAUDCTLbits.BRG16 = 0;
  1470  07C7  1683               	bsf	3,5	;RP0=1, select bank3
  1471  07C8  1703               	bsf	3,6	;RP1=1, select bank3
  1472  07C9  1187               	bcf	7,3	;volatile
  1473  07CA                     l1792:
  1474                           
  1475                           ;main.c: 130:     SPBRG = 25;
  1476  07CA  3019               	movlw	25
  1477  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  1478  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  1479  07CD  0099               	movwf	25	;volatile
  1480  07CE                     l1794:
  1481                           
  1482                           ;main.c: 131:     SPBRGH = 1;
  1483  07CE  3001               	movlw	1
  1484  07CF  009A               	movwf	26	;volatile
  1485  07D0                     l1796:
  1486                           
  1487                           ;main.c: 133:     RCSTAbits.SPEN = 1;
  1488  07D0  1283               	bcf	3,5	;RP0=0, select bank0
  1489  07D1  1303               	bcf	3,6	;RP1=0, select bank0
  1490  07D2  1798               	bsf	24,7	;volatile
  1491  07D3                     l1798:
  1492                           
  1493                           ;main.c: 134:     RCSTAbits.RX9 = 0;
  1494  07D3  1318               	bcf	24,6	;volatile
  1495  07D4                     l1800:
  1496                           
  1497                           ;main.c: 135:     RCSTAbits.CREN = 1;
  1498  07D4  1618               	bsf	24,4	;volatile
  1499  07D5                     l1802:
  1500                           
  1501                           ;main.c: 136:     TXSTAbits.TX9 = 0;
  1502  07D5  1683               	bsf	3,5	;RP0=1, select bank1
  1503  07D6  1303               	bcf	3,6	;RP1=0, select bank1
  1504  07D7  1318               	bcf	24,6	;volatile
  1505  07D8                     l1804:
  1506                           
  1507                           ;main.c: 138:     TXSTAbits.TXEN = 1;
  1508  07D8  1698               	bsf	24,5	;volatile
  1509  07D9                     l1806:
  1510                           
  1511                           ;main.c: 140:     PIR1bits.RCIF = 0;
  1512  07D9  1283               	bcf	3,5	;RP0=0, select bank0
  1513  07DA  1303               	bcf	3,6	;RP1=0, select bank0
  1514  07DB  128C               	bcf	12,5	;volatile
  1515  07DC                     l1808:
  1516                           
  1517                           ;main.c: 141:     PIR1bits.TXIF = 0;
  1518  07DC  120C               	bcf	12,4	;volatile
  1519  07DD                     l1810:
  1520                           
  1521                           ;main.c: 144:     OSCCONbits.IRCF0 = 0;
  1522  07DD  1683               	bsf	3,5	;RP0=1, select bank1
  1523  07DE  1303               	bcf	3,6	;RP1=0, select bank1
  1524  07DF  120F               	bcf	15,4	;volatile
  1525  07E0                     l1812:
  1526                           
  1527                           ;main.c: 145:     OSCCONbits.IRCF1 = 1;
  1528  07E0  168F               	bsf	15,5	;volatile
  1529  07E1                     l1814:
  1530                           
  1531                           ;main.c: 146:     OSCCONbits.IRCF2 = 1;
  1532  07E1  170F               	bsf	15,6	;volatile
  1533  07E2                     l1816:
  1534                           
  1535                           ;main.c: 147:     OSCCONbits.SCS = 1;
  1536  07E2  140F               	bsf	15,0	;volatile
  1537  07E3                     l102:
  1538  07E3  0008               	return
  1539  07E4                     __end_of_setup:
  1540                           
  1541                           	psect	text5
  1542  03D1                     __ptext5:	
  1543 ;; *************** function _spiInit *****************
  1544 ;; Defined at:
  1545 ;;		line 12 in file "SPI.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;  sType           1    wreg     enum E1264
  1548 ;;  sDataSample     1    2[COMMON] enum E1272
  1549 ;;  sClockIdle      1    3[COMMON] enum E1276
  1550 ;;  sTransmitEdg    1    4[COMMON] enum E1280
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;  sType           1    5[COMMON] enum E1264
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         3       0       0       0       0
  1563 ;;      Locals:         1       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0
  1565 ;;      Totals:         4       0       0       0       0
  1566 ;;Total ram usage:        4 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_setup
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _spiInit
  1578  03D1                     _spiInit:
  1579                           
  1580                           ;incstack = 0
  1581                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1582                           ;spiInit@sType stored from wreg
  1583  03D1  00F5               	movwf	spiInit@sType
  1584  03D2                     l1738:
  1585                           
  1586                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1587  03D2  1683               	bsf	3,5	;RP0=1, select bank1
  1588  03D3  1303               	bcf	3,6	;RP1=0, select bank1
  1589  03D4  1287               	bcf	7,5	;volatile
  1590                           
  1591                           ;SPI.c: 15:     if(sType & 0b00000100)
  1592  03D5  1D75               	btfss	spiInit@sType,2
  1593  03D6  2BD8               	goto	u1261
  1594  03D7  2BD9               	goto	u1260
  1595  03D8                     u1261:
  1596  03D8  2BDD               	goto	l1744
  1597  03D9                     u1260:
  1598  03D9                     l1740:
  1599                           
  1600                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1601  03D9  0874               	movf	spiInit@sTransmitEdge,w
  1602  03DA  0094               	movwf	20	;volatile
  1603  03DB                     l1742:
  1604                           
  1605                           ;SPI.c: 18:         TRISC3 = 1;
  1606  03DB  1587               	bsf	7,3	;volatile
  1607                           
  1608                           ;SPI.c: 19:     }
  1609  03DC  2BE1               	goto	l171
  1610  03DD                     l1744:
  1611                           
  1612                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1613  03DD  0872               	movf	spiInit@sDataSample,w
  1614  03DE  0474               	iorwf	spiInit@sTransmitEdge,w
  1615  03DF  0094               	movwf	20	;volatile
  1616  03E0                     l1746:
  1617                           
  1618                           ;SPI.c: 23:         TRISC3 = 0;
  1619  03E0  1187               	bcf	7,3	;volatile
  1620  03E1                     l171:	
  1621                           ;SPI.c: 24:     }
  1622                           
  1623                           
  1624                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1625  03E1  0875               	movf	spiInit@sType,w
  1626  03E2  0473               	iorwf	spiInit@sClockIdle,w
  1627  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1628  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1629  03E5  0094               	movwf	20	;volatile
  1630  03E6                     l172:
  1631  03E6  0008               	return
  1632  03E7                     __end_of_spiInit:
  1633                           
  1634                           	psect	text6
  1635  002F                     __ptext6:	
  1636 ;; *************** function _mensaje *****************
  1637 ;; Defined at:
  1638 ;;		line 161 in file "main.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0
  1654 ;;      Temps:          0       0       5       0       0
  1655 ;;      Totals:         0       0       5       0       0
  1656 ;;Total ram usage:        5 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    5
  1659 ;; This function calls:
  1660 ;;		_concat
  1661 ;;		_division
  1662 ;;		_printf
  1663 ;; This function is called by:
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           
  1669                           ;psect for function _mensaje
  1670  002F                     _mensaje:
  1671  002F                     l2164:	
  1672                           ;incstack = 0
  1673                           ; Regs used in _mensaje: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1674                           
  1675                           
  1676                           ;main.c: 162:     division(pot1);
  1677  002F  1683               	bsf	3,5	;RP0=1, select bank1
  1678  0030  1303               	bcf	3,6	;RP1=0, select bank1
  1679  0031  0829               	movf	_pot1^(0+128),w
  1680  0032  120A  118A  2564  120A  118A  	fcall	_division
  1681  0037                     l2166:
  1682                           
  1683                           ;main.c: 163:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1684  0037  3002               	movlw	2
  1685  0038  1683               	bsf	3,5	;RP0=1, select bank1
  1686  0039  1303               	bcf	3,6	;RP1=0, select bank1
  1687  003A  00AC               	movwf	(??_mensaje^(0+128)+2)
  1688  003B  3045               	movlw	69
  1689  003C  00AB               	movwf	(??_mensaje^(0+128)+1)
  1690  003D  30A9               	movlw	169
  1691  003E  00AA               	movwf	??_mensaje^(0+128)
  1692  003F                     u1827:
  1693  003F  0BAA               	decfsz	??_mensaje^(0+128),f
  1694  0040  283F               	goto	u1827
  1695  0041  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1696  0042  283F               	goto	u1827
  1697  0043  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1698  0044  283F               	goto	u1827
  1699  0045                     l2168:
  1700                           
  1701                           ;main.c: 164:     printf("\r Valor del Potenciometro 1:\r");
  1702  0045  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1703  0046  120A  118A  27E4  120A  118A  	fcall	_printf
  1704  004B                     l2170:
  1705                           
  1706                           ;main.c: 167:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1707  004B  3002               	movlw	2
  1708  004C  1683               	bsf	3,5	;RP0=1, select bank1
  1709  004D  1303               	bcf	3,6	;RP1=0, select bank1
  1710  004E  00AC               	movwf	(??_mensaje^(0+128)+2)
  1711  004F  3045               	movlw	69
  1712  0050  00AB               	movwf	(??_mensaje^(0+128)+1)
  1713  0051  30A9               	movlw	169
  1714  0052  00AA               	movwf	??_mensaje^(0+128)
  1715  0053                     u1837:
  1716  0053  0BAA               	decfsz	??_mensaje^(0+128),f
  1717  0054  2853               	goto	u1837
  1718  0055  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1719  0056  2853               	goto	u1837
  1720  0057  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1721  0058  2853               	goto	u1837
  1722  0059                     l2172:
  1723                           
  1724                           ;main.c: 168:     TXREG = hundreds;
  1725  0059  087B               	movf	_hundreds,w
  1726  005A  1283               	bcf	3,5	;RP0=0, select bank0
  1727  005B  1303               	bcf	3,6	;RP1=0, select bank0
  1728  005C  0099               	movwf	25	;volatile
  1729  005D                     l2174:
  1730                           
  1731                           ;main.c: 169:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1732  005D  3002               	movlw	2
  1733  005E  1683               	bsf	3,5	;RP0=1, select bank1
  1734  005F  1303               	bcf	3,6	;RP1=0, select bank1
  1735  0060  00AC               	movwf	(??_mensaje^(0+128)+2)
  1736  0061  3045               	movlw	69
  1737  0062  00AB               	movwf	(??_mensaje^(0+128)+1)
  1738  0063  30A9               	movlw	169
  1739  0064  00AA               	movwf	??_mensaje^(0+128)
  1740  0065                     u1847:
  1741  0065  0BAA               	decfsz	??_mensaje^(0+128),f
  1742  0066  2865               	goto	u1847
  1743  0067  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1744  0068  2865               	goto	u1847
  1745  0069  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1746  006A  2865               	goto	u1847
  1747  006B                     l2176:
  1748                           
  1749                           ;main.c: 170:     TXREG = 46;
  1750  006B  302E               	movlw	46
  1751  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1752  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1753  006E  0099               	movwf	25	;volatile
  1754  006F                     l2178:
  1755                           
  1756                           ;main.c: 171:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1757  006F  3002               	movlw	2
  1758  0070  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0071  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0072  00AC               	movwf	(??_mensaje^(0+128)+2)
  1761  0073  3045               	movlw	69
  1762  0074  00AB               	movwf	(??_mensaje^(0+128)+1)
  1763  0075  30A9               	movlw	169
  1764  0076  00AA               	movwf	??_mensaje^(0+128)
  1765  0077                     u1857:
  1766  0077  0BAA               	decfsz	??_mensaje^(0+128),f
  1767  0078  2877               	goto	u1857
  1768  0079  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1769  007A  2877               	goto	u1857
  1770  007B  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1771  007C  2877               	goto	u1857
  1772  007D                     l2180:
  1773                           
  1774                           ;main.c: 172:     TXREG = tens;
  1775  007D  087A               	movf	_tens,w
  1776  007E  1283               	bcf	3,5	;RP0=0, select bank0
  1777  007F  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0080  0099               	movwf	25	;volatile
  1779  0081                     l2182:
  1780                           
  1781                           ;main.c: 173:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1782  0081  3002               	movlw	2
  1783  0082  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0083  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0084  00AC               	movwf	(??_mensaje^(0+128)+2)
  1786  0085  3045               	movlw	69
  1787  0086  00AB               	movwf	(??_mensaje^(0+128)+1)
  1788  0087  30A9               	movlw	169
  1789  0088  00AA               	movwf	??_mensaje^(0+128)
  1790  0089                     u1867:
  1791  0089  0BAA               	decfsz	??_mensaje^(0+128),f
  1792  008A  2889               	goto	u1867
  1793  008B  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1794  008C  2889               	goto	u1867
  1795  008D  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1796  008E  2889               	goto	u1867
  1797  008F                     l2184:
  1798                           
  1799                           ;main.c: 174:     TXREG = units;
  1800  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1801  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1802  0091  086C               	movf	_units,w
  1803  0092  0099               	movwf	25	;volatile
  1804  0093                     l2186:
  1805                           
  1806                           ;main.c: 175:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1807  0093  3002               	movlw	2
  1808  0094  1683               	bsf	3,5	;RP0=1, select bank1
  1809  0095  1303               	bcf	3,6	;RP1=0, select bank1
  1810  0096  00AC               	movwf	(??_mensaje^(0+128)+2)
  1811  0097  3045               	movlw	69
  1812  0098  00AB               	movwf	(??_mensaje^(0+128)+1)
  1813  0099  30A9               	movlw	169
  1814  009A  00AA               	movwf	??_mensaje^(0+128)
  1815  009B                     u1877:
  1816  009B  0BAA               	decfsz	??_mensaje^(0+128),f
  1817  009C  289B               	goto	u1877
  1818  009D  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1819  009E  289B               	goto	u1877
  1820  009F  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1821  00A0  289B               	goto	u1877
  1822  00A1                     l2188:
  1823                           
  1824                           ;main.c: 176:     printf(" V");
  1825  00A1  30D9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1826  00A2  120A  118A  27E4  120A  118A  	fcall	_printf
  1827  00A7                     l2190:
  1828                           
  1829                           ;main.c: 177:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1830  00A7  3002               	movlw	2
  1831  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1832  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1833  00AA  00AC               	movwf	(??_mensaje^(0+128)+2)
  1834  00AB  3045               	movlw	69
  1835  00AC  00AB               	movwf	(??_mensaje^(0+128)+1)
  1836  00AD  30A9               	movlw	169
  1837  00AE  00AA               	movwf	??_mensaje^(0+128)
  1838  00AF                     u1887:
  1839  00AF  0BAA               	decfsz	??_mensaje^(0+128),f
  1840  00B0  28AF               	goto	u1887
  1841  00B1  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1842  00B2  28AF               	goto	u1887
  1843  00B3  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1844  00B4  28AF               	goto	u1887
  1845  00B5                     l2192:
  1846                           
  1847                           ;main.c: 178:     printf("\r");
  1848  00B5  30A0               	movlw	(low (((STR_4+29)-__stringbase)| (0+32768)))& (0+255)
  1849  00B6  120A  118A  27E4  120A  118A  	fcall	_printf
  1850  00BB                     l2194:
  1851                           
  1852                           ;main.c: 181:     division(pot2);
  1853  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1854  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1855  00BD  0828               	movf	_pot2^(0+128),w
  1856  00BE  120A  118A  2564  120A  118A  	fcall	_division
  1857  00C3                     l2196:
  1858                           
  1859                           ;main.c: 182:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1860  00C3  3002               	movlw	2
  1861  00C4  1683               	bsf	3,5	;RP0=1, select bank1
  1862  00C5  1303               	bcf	3,6	;RP1=0, select bank1
  1863  00C6  00AC               	movwf	(??_mensaje^(0+128)+2)
  1864  00C7  3045               	movlw	69
  1865  00C8  00AB               	movwf	(??_mensaje^(0+128)+1)
  1866  00C9  30A9               	movlw	169
  1867  00CA  00AA               	movwf	??_mensaje^(0+128)
  1868  00CB                     u1897:
  1869  00CB  0BAA               	decfsz	??_mensaje^(0+128),f
  1870  00CC  28CB               	goto	u1897
  1871  00CD  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1872  00CE  28CB               	goto	u1897
  1873  00CF  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1874  00D0  28CB               	goto	u1897
  1875                           
  1876                           ;main.c: 183:     printf("\r Valor del Potenciometro 2: \r");
  1877  00D1  3083               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1878  00D2  120A  118A  27E4  120A  118A  	fcall	_printf
  1879  00D7                     l2198:
  1880                           
  1881                           ;main.c: 186:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1882  00D7  3002               	movlw	2
  1883  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  1884  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  1885  00DA  00AC               	movwf	(??_mensaje^(0+128)+2)
  1886  00DB  3045               	movlw	69
  1887  00DC  00AB               	movwf	(??_mensaje^(0+128)+1)
  1888  00DD  30A9               	movlw	169
  1889  00DE  00AA               	movwf	??_mensaje^(0+128)
  1890  00DF                     u1907:
  1891  00DF  0BAA               	decfsz	??_mensaje^(0+128),f
  1892  00E0  28DF               	goto	u1907
  1893  00E1  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1894  00E2  28DF               	goto	u1907
  1895  00E3  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1896  00E4  28DF               	goto	u1907
  1897  00E5                     l2200:
  1898                           
  1899                           ;main.c: 187:     TXREG = hundreds;
  1900  00E5  087B               	movf	_hundreds,w
  1901  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1902  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1903  00E8  0099               	movwf	25	;volatile
  1904  00E9                     l2202:
  1905                           
  1906                           ;main.c: 188:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1907  00E9  3002               	movlw	2
  1908  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  1909  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  1910  00EC  00AC               	movwf	(??_mensaje^(0+128)+2)
  1911  00ED  3045               	movlw	69
  1912  00EE  00AB               	movwf	(??_mensaje^(0+128)+1)
  1913  00EF  30A9               	movlw	169
  1914  00F0  00AA               	movwf	??_mensaje^(0+128)
  1915  00F1                     u1917:
  1916  00F1  0BAA               	decfsz	??_mensaje^(0+128),f
  1917  00F2  28F1               	goto	u1917
  1918  00F3  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1919  00F4  28F1               	goto	u1917
  1920  00F5  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1921  00F6  28F1               	goto	u1917
  1922  00F7                     l2204:
  1923                           
  1924                           ;main.c: 189:     TXREG = 46;
  1925  00F7  302E               	movlw	46
  1926  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1927  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1928  00FA  0099               	movwf	25	;volatile
  1929  00FB                     l2206:
  1930                           
  1931                           ;main.c: 190:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1932  00FB  3002               	movlw	2
  1933  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1934  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1935  00FE  00AC               	movwf	(??_mensaje^(0+128)+2)
  1936  00FF  3045               	movlw	69
  1937  0100  00AB               	movwf	(??_mensaje^(0+128)+1)
  1938  0101  30A9               	movlw	169
  1939  0102  00AA               	movwf	??_mensaje^(0+128)
  1940  0103                     u1927:
  1941  0103  0BAA               	decfsz	??_mensaje^(0+128),f
  1942  0104  2903               	goto	u1927
  1943  0105  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1944  0106  2903               	goto	u1927
  1945  0107  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1946  0108  2903               	goto	u1927
  1947  0109                     l2208:
  1948                           
  1949                           ;main.c: 191:     TXREG = tens;
  1950  0109  087A               	movf	_tens,w
  1951  010A  1283               	bcf	3,5	;RP0=0, select bank0
  1952  010B  1303               	bcf	3,6	;RP1=0, select bank0
  1953  010C  0099               	movwf	25	;volatile
  1954  010D                     l2210:
  1955                           
  1956                           ;main.c: 192:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1957  010D  3002               	movlw	2
  1958  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1959  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1960  0110  00AC               	movwf	(??_mensaje^(0+128)+2)
  1961  0111  3045               	movlw	69
  1962  0112  00AB               	movwf	(??_mensaje^(0+128)+1)
  1963  0113  30A9               	movlw	169
  1964  0114  00AA               	movwf	??_mensaje^(0+128)
  1965  0115                     u1937:
  1966  0115  0BAA               	decfsz	??_mensaje^(0+128),f
  1967  0116  2915               	goto	u1937
  1968  0117  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1969  0118  2915               	goto	u1937
  1970  0119  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1971  011A  2915               	goto	u1937
  1972  011B                     l2212:
  1973                           
  1974                           ;main.c: 193:     TXREG = units;
  1975  011B  1283               	bcf	3,5	;RP0=0, select bank0
  1976  011C  1303               	bcf	3,6	;RP1=0, select bank0
  1977  011D  086C               	movf	_units,w
  1978  011E  0099               	movwf	25	;volatile
  1979  011F                     l2214:
  1980                           
  1981                           ;main.c: 194:     _delay((unsigned long)((250)*(4000000/4000.0)));
  1982  011F  3002               	movlw	2
  1983  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0122  00AC               	movwf	(??_mensaje^(0+128)+2)
  1986  0123  3045               	movlw	69
  1987  0124  00AB               	movwf	(??_mensaje^(0+128)+1)
  1988  0125  30A9               	movlw	169
  1989  0126  00AA               	movwf	??_mensaje^(0+128)
  1990  0127                     u1947:
  1991  0127  0BAA               	decfsz	??_mensaje^(0+128),f
  1992  0128  2927               	goto	u1947
  1993  0129  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  1994  012A  2927               	goto	u1947
  1995  012B  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  1996  012C  2927               	goto	u1947
  1997  012D                     l2216:
  1998                           
  1999                           ;main.c: 195:     printf(" V");
  2000  012D  30D9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2001  012E  120A  118A  27E4  120A  118A  	fcall	_printf
  2002                           
  2003                           ;main.c: 196:     _delay((unsigned long)((250)*(4000000/4000.0)));
  2004  0133  3002               	movlw	2
  2005  0134  1683               	bsf	3,5	;RP0=1, select bank1
  2006  0135  1303               	bcf	3,6	;RP1=0, select bank1
  2007  0136  00AC               	movwf	(??_mensaje^(0+128)+2)
  2008  0137  3045               	movlw	69
  2009  0138  00AB               	movwf	(??_mensaje^(0+128)+1)
  2010  0139  30A9               	movlw	169
  2011  013A  00AA               	movwf	??_mensaje^(0+128)
  2012  013B                     u1957:
  2013  013B  0BAA               	decfsz	??_mensaje^(0+128),f
  2014  013C  293B               	goto	u1957
  2015  013D  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  2016  013E  293B               	goto	u1957
  2017  013F  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  2018  0140  293B               	goto	u1957
  2019  0141                     l2218:
  2020                           
  2021                           ;main.c: 197:     printf("\r");
  2022  0141  30A0               	movlw	(low (((STR_4+29)-__stringbase)| (0+32768)))& (0+255)
  2023  0142  120A  118A  27E4  120A  118A  	fcall	_printf
  2024  0147                     l2220:
  2025                           
  2026                           ;main.c: 199:     printf("Ingresar el valor del contador: (Debe ser entre 0 y 255)\r");
  2027  0147  3049               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2028  0148  120A  118A  27E4  120A  118A  	fcall	_printf
  2029                           
  2030                           ;main.c: 200:     _delay((unsigned long)((250)*(4000000/4000.0)));
  2031  014D  3002               	movlw	2
  2032  014E  1683               	bsf	3,5	;RP0=1, select bank1
  2033  014F  1303               	bcf	3,6	;RP1=0, select bank1
  2034  0150  00AC               	movwf	(??_mensaje^(0+128)+2)
  2035  0151  3045               	movlw	69
  2036  0152  00AB               	movwf	(??_mensaje^(0+128)+1)
  2037  0153  30A9               	movlw	169
  2038  0154  00AA               	movwf	??_mensaje^(0+128)
  2039  0155                     u1967:
  2040  0155  0BAA               	decfsz	??_mensaje^(0+128),f
  2041  0156  2955               	goto	u1967
  2042  0157  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  2043  0158  2955               	goto	u1967
  2044  0159  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  2045  015A  2955               	goto	u1967
  2046  015B                     l2222:
  2047                           
  2048                           ;main.c: 201:     printf("Debe escribir tres numeros que formen un valor entre 0 y 255\r
      +                          ");
  2049  015B  300B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  2050  015C  120A  118A  27E4  120A  118A  	fcall	_printf
  2051  0161                     l109:
  2052  0161  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0162  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0163  1E8C               	btfss	12,5	;volatile
  2055  0164  2966               	goto	u1691
  2056  0165  2967               	goto	u1690
  2057  0166                     u1691:
  2058  0166  2961               	goto	l109
  2059  0167                     u1690:
  2060  0167                     l2224:
  2061                           
  2062                           ;main.c: 204:         cen = RCREG -48;
  2063  0167  081A               	movf	26,w	;volatile
  2064  0168  3ED0               	addlw	208
  2065  0169  1683               	bsf	3,5	;RP0=1, select bank1
  2066  016A  1303               	bcf	3,6	;RP1=0, select bank1
  2067  016B  00AA               	movwf	??_mensaje^(0+128)
  2068  016C  082A               	movf	??_mensaje^(0+128),w
  2069  016D  1283               	bcf	3,5	;RP0=0, select bank0
  2070  016E  1303               	bcf	3,6	;RP1=0, select bank0
  2071  016F  00EA               	movwf	_cen
  2072  0170                     l2226:	
  2073                           ;main.c: 206:        while(RCREG > '2'){
  2074                           
  2075                           
  2076                           ;main.c: 206:        while(RCREG > '2'){
  2077  0170  3033               	movlw	51
  2078  0171  021A               	subwf	26,w	;volatile
  2079  0172  1803               	skipnc
  2080  0173  2975               	goto	u1701
  2081  0174  2976               	goto	u1700
  2082  0175                     u1701:
  2083  0175  2961               	goto	l109
  2084  0176                     u1700:
  2085  0176                     l116:
  2086  0176  1E8C               	btfss	12,5	;volatile
  2087  0177  2979               	goto	u1711
  2088  0178  297A               	goto	u1710
  2089  0179                     u1711:
  2090  0179  2976               	goto	l116
  2091  017A                     u1710:
  2092  017A                     l2228:
  2093                           
  2094                           ;main.c: 213:          dec = RCREG -48;
  2095  017A  081A               	movf	26,w	;volatile
  2096  017B  3ED0               	addlw	208
  2097  017C  1683               	bsf	3,5	;RP0=1, select bank1
  2098  017D  1303               	bcf	3,6	;RP1=0, select bank1
  2099  017E  00AA               	movwf	??_mensaje^(0+128)
  2100  017F  082A               	movf	??_mensaje^(0+128),w
  2101  0180  00A7               	movwf	_dec^(0+128)
  2102                           
  2103                           ;main.c: 215:         if(cen == 2){
  2104  0181  3002               	movlw	2
  2105  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2106  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2107  0184  066A               	xorwf	_cen,w
  2108  0185  1D03               	btfss	3,2
  2109  0186  2988               	goto	u1721
  2110  0187  2989               	goto	u1720
  2111  0188                     u1721:
  2112  0188  298F               	goto	l124
  2113  0189                     u1720:
  2114  0189                     l2232:
  2115                           
  2116                           ;main.c: 216:            while(RCREG > '5'){
  2117  0189  3036               	movlw	54
  2118  018A  021A               	subwf	26,w	;volatile
  2119  018B  1803               	skipnc
  2120  018C  298E               	goto	u1731
  2121  018D  298F               	goto	u1730
  2122  018E                     u1731:
  2123  018E  2976               	goto	l116
  2124  018F                     u1730:
  2125  018F                     l124:
  2126  018F  1E8C               	btfss	12,5	;volatile
  2127  0190  2992               	goto	u1741
  2128  0191  2993               	goto	u1740
  2129  0192                     u1741:
  2130  0192  298F               	goto	l124
  2131  0193                     u1740:
  2132  0193                     l2234:
  2133                           
  2134                           ;main.c: 224:         uni = RCREG - 48;
  2135  0193  081A               	movf	26,w	;volatile
  2136  0194  3ED0               	addlw	208
  2137  0195  1683               	bsf	3,5	;RP0=1, select bank1
  2138  0196  1303               	bcf	3,6	;RP1=0, select bank1
  2139  0197  00AA               	movwf	??_mensaje^(0+128)
  2140  0198  082A               	movf	??_mensaje^(0+128),w
  2141  0199  00A6               	movwf	_uni^(0+128)
  2142                           
  2143                           ;main.c: 226:        if(cen == 2 && dec == 5){
  2144  019A  3002               	movlw	2
  2145  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2146  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2147  019D  066A               	xorwf	_cen,w
  2148  019E  1D03               	btfss	3,2
  2149  019F  29A1               	goto	u1751
  2150  01A0  29A2               	goto	u1750
  2151  01A1                     u1751:
  2152  01A1  29B2               	goto	l2242
  2153  01A2                     u1750:
  2154  01A2                     l2236:
  2155  01A2  3005               	movlw	5
  2156  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  2157  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  2158  01A5  0627               	xorwf	_dec^(0+128),w
  2159  01A6  1D03               	btfss	3,2
  2160  01A7  29A9               	goto	u1761
  2161  01A8  29AA               	goto	u1760
  2162  01A9                     u1761:
  2163  01A9  29B2               	goto	l2242
  2164  01AA                     u1760:
  2165  01AA                     l2240:
  2166                           
  2167                           ;main.c: 227:            while(RCREG > '5'){
  2168  01AA  3036               	movlw	54
  2169  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  2170  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  2171  01AD  021A               	subwf	26,w	;volatile
  2172  01AE  1803               	skipnc
  2173  01AF  29B1               	goto	u1771
  2174  01B0  29B2               	goto	u1770
  2175  01B1                     u1771:
  2176  01B1  298F               	goto	l124
  2177  01B2                     u1770:
  2178  01B2                     l2242:
  2179                           
  2180                           ;main.c: 231:       con = concat(cen, dec);
  2181  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  2182  01B3  086A               	movf	_cen,w
  2183  01B4  1683               	bsf	3,5	;RP0=1, select bank1
  2184  01B5  1303               	bcf	3,6	;RP1=0, select bank1
  2185  01B6  00AA               	movwf	??_mensaje^(0+128)
  2186  01B7  01AB               	clrf	(??_mensaje^(0+128)+1)
  2187  01B8  082A               	movf	??_mensaje^(0+128),w
  2188  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2189  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2190  01BB  00BA               	movwf	concat@a
  2191  01BC  1683               	bsf	3,5	;RP0=1, select bank1
  2192  01BD  1303               	bcf	3,6	;RP1=0, select bank1
  2193  01BE  082B               	movf	(??_mensaje+1)^(0+128),w
  2194  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2195  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2196  01C1  00BB               	movwf	concat@a+1
  2197  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  2198  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  2199  01C4  0827               	movf	_dec^(0+128),w
  2200  01C5  00AC               	movwf	(??_mensaje+2)^(0+128)
  2201  01C6  01AD               	clrf	((??_mensaje+2)^(0+128)+1)
  2202  01C7  082C               	movf	(??_mensaje+2)^(0+128),w
  2203  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2204  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2205  01CA  00BC               	movwf	concat@b
  2206  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  2207  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  2208  01CD  082D               	movf	(??_mensaje+3)^(0+128),w
  2209  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  2210  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  2211  01D0  00BD               	movwf	concat@b+1
  2212  01D1  120A  118A  2733  120A  118A  	fcall	_concat
  2213  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  2214  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  2215  01D8  083A               	movf	?_concat,w
  2216  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  2217  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  2218  01DB  00AE               	movwf	(??_mensaje+4)^(0+128)
  2219  01DC  082E               	movf	(??_mensaje+4)^(0+128),w
  2220  01DD  00A4               	movwf	_con^(0+128)
  2221                           
  2222                           ;main.c: 232:       full = concat(con, uni);
  2223  01DE  0824               	movf	_con^(0+128),w
  2224  01DF  00AA               	movwf	??_mensaje^(0+128)
  2225  01E0  01AB               	clrf	(??_mensaje^(0+128)+1)
  2226  01E1  082A               	movf	??_mensaje^(0+128),w
  2227  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2228  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2229  01E4  00BA               	movwf	concat@a
  2230  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2231  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2232  01E7  082B               	movf	(??_mensaje+1)^(0+128),w
  2233  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  2234  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  2235  01EA  00BB               	movwf	concat@a+1
  2236  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2237  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2238  01ED  0826               	movf	_uni^(0+128),w
  2239  01EE  00AC               	movwf	(??_mensaje+2)^(0+128)
  2240  01EF  01AD               	clrf	((??_mensaje+2)^(0+128)+1)
  2241  01F0  082C               	movf	(??_mensaje+2)^(0+128),w
  2242  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2243  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  2244  01F3  00BC               	movwf	concat@b
  2245  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  2246  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  2247  01F6  082D               	movf	(??_mensaje+3)^(0+128),w
  2248  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  2249  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  2250  01F9  00BD               	movwf	concat@b+1
  2251  01FA  120A  118A  2733  120A  118A  	fcall	_concat
  2252  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0200  1303               	bcf	3,6	;RP1=0, select bank0
  2254  0201  083B               	movf	?_concat+1,w
  2255  0202  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0203  1303               	bcf	3,6	;RP1=0, select bank1
  2257  0204  00A1               	movwf	(_full+1)^(0+128)
  2258  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0207  083A               	movf	?_concat,w
  2261  0208  1683               	bsf	3,5	;RP0=1, select bank1
  2262  0209  1303               	bcf	3,6	;RP1=0, select bank1
  2263  020A  00A0               	movwf	_full^(0+128)
  2264  020B                     l2244:
  2265                           
  2266                           ;main.c: 233:       _delay((unsigned long)((250)*(4000000/4000.0)));
  2267  020B  3002               	movlw	2
  2268  020C  1683               	bsf	3,5	;RP0=1, select bank1
  2269  020D  1303               	bcf	3,6	;RP1=0, select bank1
  2270  020E  00AC               	movwf	(??_mensaje^(0+128)+2)
  2271  020F  3045               	movlw	69
  2272  0210  00AB               	movwf	(??_mensaje^(0+128)+1)
  2273  0211  30A9               	movlw	169
  2274  0212  00AA               	movwf	??_mensaje^(0+128)
  2275  0213                     u1977:
  2276  0213  0BAA               	decfsz	??_mensaje^(0+128),f
  2277  0214  2A13               	goto	u1977
  2278  0215  0BAB               	decfsz	(??_mensaje^(0+128)+1),f
  2279  0216  2A13               	goto	u1977
  2280  0217  0BAC               	decfsz	(??_mensaje^(0+128)+2),f
  2281  0218  2A13               	goto	u1977
  2282  0219                     l2246:
  2283                           
  2284                           ;main.c: 234:     printf("El numero elegido es: %d", full);
  2285  0219  1683               	bsf	3,5	;RP0=1, select bank1
  2286  021A  1303               	bcf	3,6	;RP1=0, select bank1
  2287  021B  0821               	movf	(_full+1)^(0+128),w
  2288  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2289  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2290  021E  00B2               	movwf	?_printf+1
  2291  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0221  0820               	movf	_full^(0+128),w
  2294  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2295  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2296  0224  00B1               	movwf	?_printf
  2297  0225  30C0               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2298  0226  120A  118A  27E4  120A  118A  	fcall	_printf
  2299  022B                     l131:
  2300  022B  0008               	return
  2301  022C                     __end_of_mensaje:
  2302                           
  2303                           	psect	text7
  2304  07E4                     __ptext7:	
  2305 ;; *************** function _printf *****************
  2306 ;; Defined at:
  2307 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\printf.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  f               1    wreg     PTR const unsigned char 
  2310 ;;		 -> STR_9(25), STR_8(62), STR_7(58), STR_6(2), 
  2311 ;;		 -> STR_5(3), STR_4(31), STR_3(2), STR_2(3), 
  2312 ;;		 -> STR_1(30), 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  f               1   22[BANK0 ] PTR const unsigned char 
  2315 ;;		 -> STR_9(25), STR_8(62), STR_7(58), STR_6(2), 
  2316 ;;		 -> STR_5(3), STR_4(31), STR_3(2), STR_2(3), 
  2317 ;;		 -> STR_1(30), 
  2318 ;;  pb              2   23[BANK0 ] struct __prbuf
  2319 ;;  ap              1   21[BANK0 ] PTR void [1]
  2320 ;;		 -> ?_sprintf(2), ?_printf(2), 
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  2   17[BANK0 ] int 
  2323 ;; Registers used:
  2324 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2330 ;;      Params:         0       2       0       0       0
  2331 ;;      Locals:         0       4       0       0       0
  2332 ;;      Temps:          0       2       0       0       0
  2333 ;;      Totals:         0       8       0       0       0
  2334 ;;Total ram usage:        8 bytes
  2335 ;; Hardware stack levels used:    1
  2336 ;; Hardware stack levels required when called:    3
  2337 ;; This function calls:
  2338 ;;		__doprnt
  2339 ;; This function is called by:
  2340 ;;		_mensaje
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _printf
  2346  07E4                     _printf:
  2347                           
  2348                           ;incstack = 0
  2349                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2350                           ;printf@f stored from wreg
  2351  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  2352  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  2353  07E6  00B6               	movwf	printf@f
  2354  07E7                     l2144:
  2355  07E7  01B7               	clrf	printf@pb
  2356  07E8                     l2146:
  2357  07E8  3001               	movlw	(low (fp__putch-fpbase))& (0+255)
  2358  07E9  00B3               	movwf	??_printf
  2359  07EA  0833               	movf	??_printf,w
  2360  07EB  00B8               	movwf	low ((printf@pb| 0+1))
  2361  07EC                     l2148:
  2362  07EC  3031               	movlw	(low (?_printf| 0))& (0+255)
  2363  07ED  00B3               	movwf	??_printf
  2364  07EE  0833               	movf	??_printf,w
  2365  07EF  00B5               	movwf	printf@ap
  2366  07F0                     l2150:
  2367                           
  2368                           ;	Return value of _printf is never used
  2369  07F0  0836               	movf	printf@f,w
  2370  07F1  00B3               	movwf	??_printf
  2371  07F2  0833               	movf	??_printf,w
  2372  07F3  00A6               	movwf	__doprnt@f
  2373  07F4  3035               	movlw	(low (printf@ap| 0))& (0+255)
  2374  07F5  00B4               	movwf	??_printf+1
  2375  07F6  0834               	movf	??_printf+1,w
  2376  07F7  00A7               	movwf	__doprnt@ap
  2377  07F8  3037               	movlw	(low (printf@pb| 0))& (0+255)
  2378  07F9  120A  118A  222C  120A  118A  	fcall	__doprnt
  2379  07FE                     l752:
  2380  07FE  0008               	return
  2381  07FF                     __end_of_printf:
  2382                           
  2383                           	psect	text8
  2384  0564                     __ptext8:	
  2385 ;; *************** function _division *****************
  2386 ;; Defined at:
  2387 ;;		line 150 in file "main.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  valor           1    wreg     unsigned char 
  2390 ;; Auto vars:     Size  Location     Type
  2391 ;;  valor           1    9[COMMON] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  1    wreg      unsigned char 
  2394 ;; Registers used:
  2395 ;;		wreg, status,2, status,0, pclath, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2401 ;;      Params:         0       0       0       0       0
  2402 ;;      Locals:         1       0       0       0       0
  2403 ;;      Temps:          0       3       0       0       0
  2404 ;;      Totals:         1       3       0       0       0
  2405 ;;Total ram usage:        4 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    2
  2408 ;; This function calls:
  2409 ;;		___awdiv
  2410 ;;		___awmod
  2411 ;; This function is called by:
  2412 ;;		_mensaje
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416                           
  2417                           ;psect for function _division
  2418  0564                     _division:
  2419                           
  2420                           ;incstack = 0
  2421                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
  2422                           ;division@valor stored from wreg
  2423  0564  00F9               	movwf	division@valor
  2424  0565                     l2136:
  2425                           
  2426                           ;main.c: 151:     hundreds = valor/50;
  2427  0565  3032               	movlw	50
  2428  0566  00F2               	movwf	___awdiv@divisor
  2429  0567  3000               	movlw	0
  2430  0568  00F3               	movwf	___awdiv@divisor+1
  2431  0569  0879               	movf	division@valor,w
  2432  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2433  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2434  056C  00A4               	movwf	??_division
  2435  056D  01A5               	clrf	??_division+1
  2436  056E  0824               	movf	??_division,w
  2437  056F  00F4               	movwf	___awdiv@dividend
  2438  0570  0825               	movf	??_division+1,w
  2439  0571  00F5               	movwf	___awdiv@dividend+1
  2440  0572  120A  118A  25CF  120A  118A  	fcall	___awdiv
  2441  0577  0872               	movf	?___awdiv,w
  2442  0578  1283               	bcf	3,5	;RP0=0, select bank0
  2443  0579  1303               	bcf	3,6	;RP1=0, select bank0
  2444  057A  00A6               	movwf	??_division+2
  2445  057B  0826               	movf	??_division+2,w
  2446  057C  00FB               	movwf	_hundreds
  2447                           
  2448                           ;main.c: 152:     residuo = valor%100;
  2449  057D  3064               	movlw	100
  2450  057E  00F2               	movwf	___awmod@divisor
  2451  057F  3000               	movlw	0
  2452  0580  00F3               	movwf	___awmod@divisor+1
  2453  0581  0879               	movf	division@valor,w
  2454  0582  00A4               	movwf	??_division
  2455  0583  01A5               	clrf	??_division+1
  2456  0584  0824               	movf	??_division,w
  2457  0585  00F4               	movwf	___awmod@dividend
  2458  0586  0825               	movf	??_division+1,w
  2459  0587  00F5               	movwf	___awmod@dividend+1
  2460  0588  120A  118A  2696  120A  118A  	fcall	___awmod
  2461  058D  0872               	movf	?___awmod,w
  2462  058E  1283               	bcf	3,5	;RP0=0, select bank0
  2463  058F  1303               	bcf	3,6	;RP1=0, select bank0
  2464  0590  00A6               	movwf	??_division+2
  2465  0591  0826               	movf	??_division+2,w
  2466  0592  00EB               	movwf	_residuo
  2467                           
  2468                           ;main.c: 153:     tens = residuo/10;
  2469  0593  300A               	movlw	10
  2470  0594  00F2               	movwf	___awdiv@divisor
  2471  0595  3000               	movlw	0
  2472  0596  00F3               	movwf	___awdiv@divisor+1
  2473  0597  086B               	movf	_residuo,w
  2474  0598  00A4               	movwf	??_division
  2475  0599  01A5               	clrf	??_division+1
  2476  059A  0824               	movf	??_division,w
  2477  059B  00F4               	movwf	___awdiv@dividend
  2478  059C  0825               	movf	??_division+1,w
  2479  059D  00F5               	movwf	___awdiv@dividend+1
  2480  059E  120A  118A  25CF  120A  118A  	fcall	___awdiv
  2481  05A3  0872               	movf	?___awdiv,w
  2482  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2483  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2484  05A6  00A6               	movwf	??_division+2
  2485  05A7  0826               	movf	??_division+2,w
  2486  05A8  00FA               	movwf	_tens
  2487                           
  2488                           ;main.c: 154:     units = residuo%10;
  2489  05A9  300A               	movlw	10
  2490  05AA  00F2               	movwf	___awmod@divisor
  2491  05AB  3000               	movlw	0
  2492  05AC  00F3               	movwf	___awmod@divisor+1
  2493  05AD  086B               	movf	_residuo,w
  2494  05AE  00A4               	movwf	??_division
  2495  05AF  01A5               	clrf	??_division+1
  2496  05B0  0824               	movf	??_division,w
  2497  05B1  00F4               	movwf	___awmod@dividend
  2498  05B2  0825               	movf	??_division+1,w
  2499  05B3  00F5               	movwf	___awmod@dividend+1
  2500  05B4  120A  118A  2696  120A  118A  	fcall	___awmod
  2501  05B9  0872               	movf	?___awmod,w
  2502  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  2503  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  2504  05BC  00A6               	movwf	??_division+2
  2505  05BD  0826               	movf	??_division+2,w
  2506  05BE  00EC               	movwf	_units
  2507  05BF                     l2138:
  2508                           
  2509                           ;main.c: 156:     hundreds = hundreds + 48;
  2510  05BF  087B               	movf	_hundreds,w
  2511  05C0  3E30               	addlw	48
  2512  05C1  00A4               	movwf	??_division
  2513  05C2  0824               	movf	??_division,w
  2514  05C3  00FB               	movwf	_hundreds
  2515  05C4                     l2140:
  2516                           
  2517                           ;main.c: 157:     tens = tens + 48;
  2518  05C4  087A               	movf	_tens,w
  2519  05C5  3E30               	addlw	48
  2520  05C6  00A4               	movwf	??_division
  2521  05C7  0824               	movf	??_division,w
  2522  05C8  00FA               	movwf	_tens
  2523  05C9                     l2142:
  2524                           
  2525                           ;main.c: 158:     units = units + 48;
  2526  05C9  086C               	movf	_units,w
  2527  05CA  3E30               	addlw	48
  2528  05CB  00A4               	movwf	??_division
  2529  05CC  0824               	movf	??_division,w
  2530  05CD  00EC               	movwf	_units
  2531  05CE                     l105:
  2532  05CE  0008               	return
  2533  05CF                     __end_of_division:
  2534                           
  2535                           	psect	text9
  2536  0696                     __ptext9:	
  2537 ;; *************** function ___awmod *****************
  2538 ;; Defined at:
  2539 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;  divisor         2    2[COMMON] int 
  2542 ;;  dividend        2    4[COMMON] int 
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;  sign            1    8[COMMON] unsigned char 
  2545 ;;  counter         1    7[COMMON] unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  2    2[COMMON] int 
  2548 ;; Registers used:
  2549 ;;		wreg, status,2, status,0
  2550 ;; Tracked objects:
  2551 ;;		On entry : 0/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2555 ;;      Params:         4       0       0       0       0
  2556 ;;      Locals:         2       0       0       0       0
  2557 ;;      Temps:          1       0       0       0       0
  2558 ;;      Totals:         7       0       0       0       0
  2559 ;;Total ram usage:        7 bytes
  2560 ;; Hardware stack levels used:    1
  2561 ;; Hardware stack levels required when called:    1
  2562 ;; This function calls:
  2563 ;;		Nothing
  2564 ;; This function is called by:
  2565 ;;		_division
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function ___awmod
  2571  0696                     ___awmod:
  2572  0696                     l1700:	
  2573                           ;incstack = 0
  2574                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2575                           
  2576  0696  01F8               	clrf	___awmod@sign
  2577  0697                     l1702:
  2578  0697  1FF5               	btfss	___awmod@dividend+1,7
  2579  0698  2E9A               	goto	u1171
  2580  0699  2E9B               	goto	u1170
  2581  069A                     u1171:
  2582  069A  2EA2               	goto	l1708
  2583  069B                     u1170:
  2584  069B                     l1704:
  2585  069B  09F4               	comf	___awmod@dividend,f
  2586  069C  09F5               	comf	___awmod@dividend+1,f
  2587  069D  0AF4               	incf	___awmod@dividend,f
  2588  069E  1903               	skipnz
  2589  069F  0AF5               	incf	___awmod@dividend+1,f
  2590  06A0                     l1706:
  2591  06A0  01F8               	clrf	___awmod@sign
  2592  06A1  0AF8               	incf	___awmod@sign,f
  2593  06A2                     l1708:
  2594  06A2  1FF3               	btfss	___awmod@divisor+1,7
  2595  06A3  2EA5               	goto	u1181
  2596  06A4  2EA6               	goto	u1180
  2597  06A5                     u1181:
  2598  06A5  2EAB               	goto	l1712
  2599  06A6                     u1180:
  2600  06A6                     l1710:
  2601  06A6  09F2               	comf	___awmod@divisor,f
  2602  06A7  09F3               	comf	___awmod@divisor+1,f
  2603  06A8  0AF2               	incf	___awmod@divisor,f
  2604  06A9  1903               	skipnz
  2605  06AA  0AF3               	incf	___awmod@divisor+1,f
  2606  06AB                     l1712:
  2607  06AB  0872               	movf	___awmod@divisor,w
  2608  06AC  0473               	iorwf	___awmod@divisor+1,w
  2609  06AD  1903               	btfsc	3,2
  2610  06AE  2EB0               	goto	u1191
  2611  06AF  2EB1               	goto	u1190
  2612  06B0                     u1191:
  2613  06B0  2EE0               	goto	l1730
  2614  06B1                     u1190:
  2615  06B1                     l1714:
  2616  06B1  01F7               	clrf	___awmod@counter
  2617  06B2  0AF7               	incf	___awmod@counter,f
  2618  06B3  2EBF               	goto	l1720
  2619  06B4                     l1716:
  2620  06B4  3001               	movlw	1
  2621  06B5                     u1205:
  2622  06B5  1003               	clrc
  2623  06B6  0DF2               	rlf	___awmod@divisor,f
  2624  06B7  0DF3               	rlf	___awmod@divisor+1,f
  2625  06B8  3EFF               	addlw	-1
  2626  06B9  1D03               	skipz
  2627  06BA  2EB5               	goto	u1205
  2628  06BB                     l1718:
  2629  06BB  3001               	movlw	1
  2630  06BC  00F6               	movwf	??___awmod
  2631  06BD  0876               	movf	??___awmod,w
  2632  06BE  07F7               	addwf	___awmod@counter,f
  2633  06BF                     l1720:
  2634  06BF  1FF3               	btfss	___awmod@divisor+1,7
  2635  06C0  2EC2               	goto	u1211
  2636  06C1  2EC3               	goto	u1210
  2637  06C2                     u1211:
  2638  06C2  2EB4               	goto	l1716
  2639  06C3                     u1210:
  2640  06C3                     l1722:
  2641  06C3  0873               	movf	___awmod@divisor+1,w
  2642  06C4  0275               	subwf	___awmod@dividend+1,w
  2643  06C5  1D03               	skipz
  2644  06C6  2EC9               	goto	u1225
  2645  06C7  0872               	movf	___awmod@divisor,w
  2646  06C8  0274               	subwf	___awmod@dividend,w
  2647  06C9                     u1225:
  2648  06C9  1C03               	skipc
  2649  06CA  2ECC               	goto	u1221
  2650  06CB  2ECD               	goto	u1220
  2651  06CC                     u1221:
  2652  06CC  2ED3               	goto	l1726
  2653  06CD                     u1220:
  2654  06CD                     l1724:
  2655  06CD  0872               	movf	___awmod@divisor,w
  2656  06CE  02F4               	subwf	___awmod@dividend,f
  2657  06CF  0873               	movf	___awmod@divisor+1,w
  2658  06D0  1C03               	skipc
  2659  06D1  03F5               	decf	___awmod@dividend+1,f
  2660  06D2  02F5               	subwf	___awmod@dividend+1,f
  2661  06D3                     l1726:
  2662  06D3  3001               	movlw	1
  2663  06D4                     u1235:
  2664  06D4  1003               	clrc
  2665  06D5  0CF3               	rrf	___awmod@divisor+1,f
  2666  06D6  0CF2               	rrf	___awmod@divisor,f
  2667  06D7  3EFF               	addlw	-1
  2668  06D8  1D03               	skipz
  2669  06D9  2ED4               	goto	u1235
  2670  06DA                     l1728:
  2671  06DA  3001               	movlw	1
  2672  06DB  02F7               	subwf	___awmod@counter,f
  2673  06DC  1D03               	btfss	3,2
  2674  06DD  2EDF               	goto	u1241
  2675  06DE  2EE0               	goto	u1240
  2676  06DF                     u1241:
  2677  06DF  2EC3               	goto	l1722
  2678  06E0                     u1240:
  2679  06E0                     l1730:
  2680  06E0  0878               	movf	___awmod@sign,w
  2681  06E1  1903               	btfsc	3,2
  2682  06E2  2EE4               	goto	u1251
  2683  06E3  2EE5               	goto	u1250
  2684  06E4                     u1251:
  2685  06E4  2EEA               	goto	l1734
  2686  06E5                     u1250:
  2687  06E5                     l1732:
  2688  06E5  09F4               	comf	___awmod@dividend,f
  2689  06E6  09F5               	comf	___awmod@dividend+1,f
  2690  06E7  0AF4               	incf	___awmod@dividend,f
  2691  06E8  1903               	skipnz
  2692  06E9  0AF5               	incf	___awmod@dividend+1,f
  2693  06EA                     l1734:
  2694  06EA  0875               	movf	___awmod@dividend+1,w
  2695  06EB  00F3               	movwf	?___awmod+1
  2696  06EC  0874               	movf	___awmod@dividend,w
  2697  06ED  00F2               	movwf	?___awmod
  2698  06EE                     l441:
  2699  06EE  0008               	return
  2700  06EF                     __end_of___awmod:
  2701                           
  2702                           	psect	text10
  2703  05CF                     __ptext10:	
  2704 ;; *************** function ___awdiv *****************
  2705 ;; Defined at:
  2706 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;  divisor         2    2[COMMON] int 
  2709 ;;  dividend        2    4[COMMON] int 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  quotient        2    2[BANK0 ] int 
  2712 ;;  sign            1    1[BANK0 ] unsigned char 
  2713 ;;  counter         1    0[BANK0 ] unsigned char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  2    2[COMMON] int 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2723 ;;      Params:         4       0       0       0       0
  2724 ;;      Locals:         0       4       0       0       0
  2725 ;;      Temps:          1       0       0       0       0
  2726 ;;      Totals:         5       4       0       0       0
  2727 ;;Total ram usage:        9 bytes
  2728 ;; Hardware stack levels used:    1
  2729 ;; Hardware stack levels required when called:    1
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_division
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           
  2738                           ;psect for function ___awdiv
  2739  05CF                     ___awdiv:
  2740  05CF                     l2092:	
  2741                           ;incstack = 0
  2742                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2743                           
  2744  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  2745  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  2746  05D1  01A1               	clrf	___awdiv@sign
  2747  05D2                     l2094:
  2748  05D2  1FF3               	btfss	___awdiv@divisor+1,7
  2749  05D3  2DD5               	goto	u1591
  2750  05D4  2DD6               	goto	u1590
  2751  05D5                     u1591:
  2752  05D5  2DDD               	goto	l2100
  2753  05D6                     u1590:
  2754  05D6                     l2096:
  2755  05D6  09F2               	comf	___awdiv@divisor,f
  2756  05D7  09F3               	comf	___awdiv@divisor+1,f
  2757  05D8  0AF2               	incf	___awdiv@divisor,f
  2758  05D9  1903               	skipnz
  2759  05DA  0AF3               	incf	___awdiv@divisor+1,f
  2760  05DB                     l2098:
  2761  05DB  01A1               	clrf	___awdiv@sign
  2762  05DC  0AA1               	incf	___awdiv@sign,f
  2763  05DD                     l2100:
  2764  05DD  1FF5               	btfss	___awdiv@dividend+1,7
  2765  05DE  2DE0               	goto	u1601
  2766  05DF  2DE1               	goto	u1600
  2767  05E0                     u1601:
  2768  05E0  2DEA               	goto	l2106
  2769  05E1                     u1600:
  2770  05E1                     l2102:
  2771  05E1  09F4               	comf	___awdiv@dividend,f
  2772  05E2  09F5               	comf	___awdiv@dividend+1,f
  2773  05E3  0AF4               	incf	___awdiv@dividend,f
  2774  05E4  1903               	skipnz
  2775  05E5  0AF5               	incf	___awdiv@dividend+1,f
  2776  05E6                     l2104:
  2777  05E6  3001               	movlw	1
  2778  05E7  00F6               	movwf	??___awdiv
  2779  05E8  0876               	movf	??___awdiv,w
  2780  05E9  06A1               	xorwf	___awdiv@sign,f
  2781  05EA                     l2106:
  2782  05EA  01A2               	clrf	___awdiv@quotient
  2783  05EB  01A3               	clrf	___awdiv@quotient+1
  2784  05EC                     l2108:
  2785  05EC  0872               	movf	___awdiv@divisor,w
  2786  05ED  0473               	iorwf	___awdiv@divisor+1,w
  2787  05EE  1903               	btfsc	3,2
  2788  05EF  2DF1               	goto	u1611
  2789  05F0  2DF2               	goto	u1610
  2790  05F1                     u1611:
  2791  05F1  2E29               	goto	l2128
  2792  05F2                     u1610:
  2793  05F2                     l2110:
  2794  05F2  01A0               	clrf	___awdiv@counter
  2795  05F3  0AA0               	incf	___awdiv@counter,f
  2796  05F4  2E00               	goto	l2116
  2797  05F5                     l2112:
  2798  05F5  3001               	movlw	1
  2799  05F6                     u1625:
  2800  05F6  1003               	clrc
  2801  05F7  0DF2               	rlf	___awdiv@divisor,f
  2802  05F8  0DF3               	rlf	___awdiv@divisor+1,f
  2803  05F9  3EFF               	addlw	-1
  2804  05FA  1D03               	skipz
  2805  05FB  2DF6               	goto	u1625
  2806  05FC                     l2114:
  2807  05FC  3001               	movlw	1
  2808  05FD  00F6               	movwf	??___awdiv
  2809  05FE  0876               	movf	??___awdiv,w
  2810  05FF  07A0               	addwf	___awdiv@counter,f
  2811  0600                     l2116:
  2812  0600  1FF3               	btfss	___awdiv@divisor+1,7
  2813  0601  2E03               	goto	u1631
  2814  0602  2E04               	goto	u1630
  2815  0603                     u1631:
  2816  0603  2DF5               	goto	l2112
  2817  0604                     u1630:
  2818  0604                     l2118:
  2819  0604  3001               	movlw	1
  2820  0605                     u1645:
  2821  0605  1003               	clrc
  2822  0606  0DA2               	rlf	___awdiv@quotient,f
  2823  0607  0DA3               	rlf	___awdiv@quotient+1,f
  2824  0608  3EFF               	addlw	-1
  2825  0609  1D03               	skipz
  2826  060A  2E05               	goto	u1645
  2827  060B  0873               	movf	___awdiv@divisor+1,w
  2828  060C  0275               	subwf	___awdiv@dividend+1,w
  2829  060D  1D03               	skipz
  2830  060E  2E11               	goto	u1655
  2831  060F  0872               	movf	___awdiv@divisor,w
  2832  0610  0274               	subwf	___awdiv@dividend,w
  2833  0611                     u1655:
  2834  0611  1C03               	skipc
  2835  0612  2E14               	goto	u1651
  2836  0613  2E15               	goto	u1650
  2837  0614                     u1651:
  2838  0614  2E1C               	goto	l2124
  2839  0615                     u1650:
  2840  0615                     l2120:
  2841  0615  0872               	movf	___awdiv@divisor,w
  2842  0616  02F4               	subwf	___awdiv@dividend,f
  2843  0617  0873               	movf	___awdiv@divisor+1,w
  2844  0618  1C03               	skipc
  2845  0619  03F5               	decf	___awdiv@dividend+1,f
  2846  061A  02F5               	subwf	___awdiv@dividend+1,f
  2847  061B                     l2122:
  2848  061B  1422               	bsf	___awdiv@quotient,0
  2849  061C                     l2124:
  2850  061C  3001               	movlw	1
  2851  061D                     u1665:
  2852  061D  1003               	clrc
  2853  061E  0CF3               	rrf	___awdiv@divisor+1,f
  2854  061F  0CF2               	rrf	___awdiv@divisor,f
  2855  0620  3EFF               	addlw	-1
  2856  0621  1D03               	skipz
  2857  0622  2E1D               	goto	u1665
  2858  0623                     l2126:
  2859  0623  3001               	movlw	1
  2860  0624  02A0               	subwf	___awdiv@counter,f
  2861  0625  1D03               	btfss	3,2
  2862  0626  2E28               	goto	u1671
  2863  0627  2E29               	goto	u1670
  2864  0628                     u1671:
  2865  0628  2E04               	goto	l2118
  2866  0629                     u1670:
  2867  0629                     l2128:
  2868  0629  0821               	movf	___awdiv@sign,w
  2869  062A  1903               	btfsc	3,2
  2870  062B  2E2D               	goto	u1681
  2871  062C  2E2E               	goto	u1680
  2872  062D                     u1681:
  2873  062D  2E33               	goto	l2132
  2874  062E                     u1680:
  2875  062E                     l2130:
  2876  062E  09A2               	comf	___awdiv@quotient,f
  2877  062F  09A3               	comf	___awdiv@quotient+1,f
  2878  0630  0AA2               	incf	___awdiv@quotient,f
  2879  0631  1903               	skipnz
  2880  0632  0AA3               	incf	___awdiv@quotient+1,f
  2881  0633                     l2132:
  2882  0633  0823               	movf	___awdiv@quotient+1,w
  2883  0634  00F3               	movwf	?___awdiv+1
  2884  0635  0822               	movf	___awdiv@quotient,w
  2885  0636  00F2               	movwf	?___awdiv
  2886  0637                     l428:
  2887  0637  0008               	return
  2888  0638                     __end_of___awdiv:
  2889                           
  2890                           	psect	text11
  2891  0733                     __ptext11:	
  2892 ;; *************** function _concat *****************
  2893 ;; Defined at:
  2894 ;;		line 243 in file "main.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  a               2   26[BANK0 ] int 
  2897 ;;  b               2   28[BANK0 ] int 
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;  s1             20   51[BANK0 ] unsigned char [20]
  2900 ;;  s2             20   31[BANK0 ] unsigned char [20]
  2901 ;;  c               2   71[BANK0 ] int 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  2   26[BANK0 ] int 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       4       0       0       0
  2912 ;;      Locals:         0      42       0       0       0
  2913 ;;      Temps:          0       1       0       0       0
  2914 ;;      Totals:         0      47       0       0       0
  2915 ;;Total ram usage:       47 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    4
  2918 ;; This function calls:
  2919 ;;		_atoi
  2920 ;;		_sprintf
  2921 ;;		_strcat
  2922 ;; This function is called by:
  2923 ;;		_mensaje
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           
  2928                           ;psect for function _concat
  2929  0733                     _concat:
  2930  0733                     l2154:	
  2931                           ;incstack = 0
  2932                           ; Regs used in _concat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2933                           
  2934                           
  2935                           ;main.c: 243: int concat(int a, int b);main.c: 244: {;main.c: 246:     char s1[20];;main
      +                          .c: 247:     char s2[20];;main.c: 251:     sprintf(s1, "%d", a);
  2936  0733  30D6               	movlw	(low (((STR_9+22)-__stringbase)| (0+32768)))& (0+255)
  2937  0734  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0735  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0736  00BE               	movwf	??_concat
  2940  0737  083E               	movf	??_concat,w
  2941  0738  00B1               	movwf	sprintf@f
  2942  0739  083B               	movf	concat@a+1,w
  2943  073A  00B3               	movwf	?_sprintf+2
  2944  073B  083A               	movf	concat@a,w
  2945  073C  00B2               	movwf	?_sprintf+1
  2946  073D  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2947  073E  120A  118A  23B0  120A  118A  	fcall	_sprintf
  2948                           
  2949                           ;main.c: 252:     sprintf(s2, "%d", b);
  2950  0743  30D6               	movlw	(low (((STR_9+22)-__stringbase)| (0+32768)))& (0+255)
  2951  0744  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0745  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0746  00BE               	movwf	??_concat
  2954  0747  083E               	movf	??_concat,w
  2955  0748  00B1               	movwf	sprintf@f
  2956  0749  083D               	movf	concat@b+1,w
  2957  074A  00B3               	movwf	?_sprintf+2
  2958  074B  083C               	movf	concat@b,w
  2959  074C  00B2               	movwf	?_sprintf+1
  2960  074D  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2961  074E  120A  118A  23B0  120A  118A  	fcall	_sprintf
  2962  0753                     l2156:
  2963                           
  2964                           ;main.c: 256:     strcat(s1, s2);
  2965  0753  303F               	movlw	(low (concat@s2| 0))& (0+255)
  2966  0754  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0755  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0756  00BE               	movwf	??_concat
  2969  0757  083E               	movf	??_concat,w
  2970  0758  00F2               	movwf	strcat@from
  2971  0759  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2972  075A  120A  118A  2362  120A  118A  	fcall	_strcat
  2973  075F                     l2158:
  2974                           
  2975                           ;main.c: 260:     int c = atoi(s1);
  2976  075F  3053               	movlw	(low (concat@s1| 0))& (0+255)
  2977  0760  120A  118A  24E1  120A  118A  	fcall	_atoi
  2978  0765  0879               	movf	?_atoi+1,w
  2979  0766  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0767  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0768  00E8               	movwf	concat@c+1
  2982  0769  0878               	movf	?_atoi,w
  2983  076A  00E7               	movwf	concat@c
  2984  076B                     l2160:
  2985                           
  2986                           ;main.c: 263:     return c;
  2987  076B  0868               	movf	concat@c+1,w
  2988  076C  00BB               	movwf	?_concat+1
  2989  076D  0867               	movf	concat@c,w
  2990  076E  00BA               	movwf	?_concat
  2991  076F                     l140:
  2992  076F  0008               	return
  2993  0770                     __end_of_concat:
  2994                           
  2995                           	psect	text12
  2996  0362                     __ptext12:	
  2997 ;; *************** function _strcat *****************
  2998 ;; Defined at:
  2999 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\strcat.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  to              1    wreg     PTR unsigned char 
  3002 ;;		 -> concat@s1(20), 
  3003 ;;  from            1    2[COMMON] PTR const unsigned char 
  3004 ;;		 -> concat@s2(20), 
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  to              1    4[COMMON] PTR unsigned char 
  3007 ;;		 -> concat@s1(20), 
  3008 ;;  cp              1    5[COMMON] PTR unsigned char 
  3009 ;;		 -> concat@s1(20), 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      PTR unsigned char 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3019 ;;      Params:         1       0       0       0       0
  3020 ;;      Locals:         2       0       0       0       0
  3021 ;;      Temps:          1       0       0       0       0
  3022 ;;      Totals:         4       0       0       0       0
  3023 ;;Total ram usage:        4 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    1
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_concat
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           
  3034                           ;psect for function _strcat
  3035  0362                     _strcat:
  3036                           
  3037                           ;incstack = 0
  3038                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  3039                           ;strcat@to stored from wreg
  3040  0362  00F4               	movwf	strcat@to
  3041  0363                     l1612:
  3042  0363  0874               	movf	strcat@to,w
  3043  0364  00F3               	movwf	??_strcat
  3044  0365  0873               	movf	??_strcat,w
  3045  0366  00F5               	movwf	strcat@cp
  3046  0367  2B6C               	goto	l1616
  3047  0368                     l1614:
  3048  0368  3001               	movlw	1
  3049  0369  00F3               	movwf	??_strcat
  3050  036A  0873               	movf	??_strcat,w
  3051  036B  07F5               	addwf	strcat@cp,f
  3052  036C                     l1616:
  3053  036C  0875               	movf	strcat@cp,w
  3054  036D  0084               	movwf	4
  3055  036E  1383               	bcf	3,7	;select IRP bank0
  3056  036F  0800               	movf	0,w
  3057  0370  1D03               	btfss	3,2
  3058  0371  2B73               	goto	u991
  3059  0372  2B74               	goto	u990
  3060  0373                     u991:
  3061  0373  2B68               	goto	l1614
  3062  0374                     u990:
  3063  0374  2B7D               	goto	l1620
  3064  0375                     l1618:
  3065  0375  3001               	movlw	1
  3066  0376  00F3               	movwf	??_strcat
  3067  0377  0873               	movf	??_strcat,w
  3068  0378  07F5               	addwf	strcat@cp,f
  3069  0379  3001               	movlw	1
  3070  037A  00F3               	movwf	??_strcat
  3071  037B  0873               	movf	??_strcat,w
  3072  037C  07F2               	addwf	strcat@from,f
  3073  037D                     l1620:
  3074  037D  0872               	movf	strcat@from,w
  3075  037E  0084               	movwf	4
  3076  037F  0800               	movf	0,w
  3077  0380  00F3               	movwf	??_strcat
  3078  0381  0875               	movf	strcat@cp,w
  3079  0382  0084               	movwf	4
  3080  0383  0873               	movf	??_strcat,w
  3081  0384  0080               	movwf	0
  3082  0385  0800               	movf	0,w
  3083  0386  1D03               	btfss	3,2
  3084  0387  2B89               	goto	u1001
  3085  0388  2B8A               	goto	u1000
  3086  0389                     u1001:
  3087  0389  2B75               	goto	l1618
  3088  038A                     u1000:
  3089  038A                     l806:
  3090  038A  0008               	return
  3091  038B                     __end_of_strcat:
  3092                           
  3093                           	psect	text13
  3094  03B0                     __ptext13:	
  3095 ;; *************** function _sprintf *****************
  3096 ;; Defined at:
  3097 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprintf.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;  wh              1    wreg     PTR unsigned char 
  3100 ;;		 -> concat@s2(20), concat@s1(20), 
  3101 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  3102 ;;		 -> STR_11(3), STR_10(3), 
  3103 ;; Auto vars:     Size  Location     Type
  3104 ;;  wh              1   22[BANK0 ] PTR unsigned char 
  3105 ;;		 -> concat@s2(20), concat@s1(20), 
  3106 ;;  pb              2   24[BANK0 ] struct __prbuf
  3107 ;;  ap              1   23[BANK0 ] PTR void [1]
  3108 ;;		 -> ?_sprintf(2), ?_printf(2), 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;                  2   17[BANK0 ] int 
  3111 ;; Registers used:
  3112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3118 ;;      Params:         0       3       0       0       0
  3119 ;;      Locals:         0       4       0       0       0
  3120 ;;      Temps:          0       2       0       0       0
  3121 ;;      Totals:         0       9       0       0       0
  3122 ;;Total ram usage:        9 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    3
  3125 ;; This function calls:
  3126 ;;		__doprnt
  3127 ;; This function is called by:
  3128 ;;		_concat
  3129 ;; This function uses a non-reentrant model
  3130 ;;
  3131                           
  3132                           
  3133                           ;psect for function _sprintf
  3134  03B0                     _sprintf:
  3135                           
  3136                           ;incstack = 0
  3137                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3138                           ;sprintf@wh stored from wreg
  3139  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  3140  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  3141  03B2  00B6               	movwf	sprintf@wh
  3142  03B3                     l2046:
  3143  03B3  0836               	movf	sprintf@wh,w
  3144  03B4  00B4               	movwf	??_sprintf
  3145  03B5  0834               	movf	??_sprintf,w
  3146  03B6  00B8               	movwf	sprintf@pb
  3147  03B7                     l2048:
  3148  03B7  01B9               	clrf	low ((sprintf@pb| 0+1))
  3149  03B8                     l2050:
  3150  03B8  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3151  03B9  00B4               	movwf	??_sprintf
  3152  03BA  0834               	movf	??_sprintf,w
  3153  03BB  00B7               	movwf	sprintf@ap
  3154  03BC                     l2052:
  3155  03BC  0831               	movf	sprintf@f,w
  3156  03BD  00B4               	movwf	??_sprintf
  3157  03BE  0834               	movf	??_sprintf,w
  3158  03BF  00A6               	movwf	__doprnt@f
  3159  03C0  3037               	movlw	(low (sprintf@ap| 0))& (0+255)
  3160  03C1  00B5               	movwf	??_sprintf+1
  3161  03C2  0835               	movf	??_sprintf+1,w
  3162  03C3  00A7               	movwf	__doprnt@ap
  3163  03C4  3038               	movlw	(low (sprintf@pb| 0))& (0+255)
  3164  03C5  120A  118A  222C  120A  118A  	fcall	__doprnt
  3165  03CA                     l2054:
  3166  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  3167  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  3168  03CC  0838               	movf	sprintf@pb,w
  3169  03CD  0084               	movwf	4
  3170  03CE  1383               	bcf	3,7	;select IRP bank0
  3171  03CF  0180               	clrf	0
  3172  03D0                     l797:
  3173  03D0  0008               	return
  3174  03D1                     __end_of_sprintf:
  3175                           
  3176                           	psect	text14
  3177  022C                     __ptext14:	
  3178 ;; *************** function __doprnt *****************
  3179 ;; Defined at:
  3180 ;;		line 471 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  pb              1    wreg     PTR struct __prbuf
  3183 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3184 ;;  f               1    6[BANK0 ] PTR const unsigned char 
  3185 ;;		 -> STR_11(3), STR_10(3), STR_9(25), STR_8(62), 
  3186 ;;		 -> STR_7(58), STR_6(2), STR_5(3), STR_4(31), 
  3187 ;;		 -> STR_3(2), STR_2(3), STR_1(30), 
  3188 ;;  ap              1    7[BANK0 ] PTR PTR void 
  3189 ;;		 -> sprintf@ap(1), printf@ap(1), 
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;  pb              1   16[BANK0 ] PTR struct __prbuf
  3192 ;;		 -> sprintf@pb(2), printf@pb(2), 
  3193 ;;  tmpval          4    0        struct .
  3194 ;;  val             2   13[BANK0 ] unsigned int 
  3195 ;;  cp              2    0        PTR const unsigned char 
  3196 ;;  len             2    0        unsigned int 
  3197 ;;  c               1   15[BANK0 ] unsigned char 
  3198 ;;  prec            1   12[BANK0 ] char 
  3199 ;;  flag            1   11[BANK0 ] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  2    6[BANK0 ] int 
  3202 ;; Registers used:
  3203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3209 ;;      Params:         0       2       0       0       0
  3210 ;;      Locals:         0       6       0       0       0
  3211 ;;      Temps:          0       3       0       0       0
  3212 ;;      Totals:         0      11       0       0       0
  3213 ;;Total ram usage:       11 bytes
  3214 ;; Hardware stack levels used:    1
  3215 ;; Hardware stack levels required when called:    2
  3216 ;; This function calls:
  3217 ;;		Absolute function
  3218 ;;		___lwdiv
  3219 ;;		___lwmod
  3220 ;;		_putch
  3221 ;; This function is called by:
  3222 ;;		_printf
  3223 ;;		_sprintf
  3224 ;; This function uses a non-reentrant model
  3225 ;;
  3226                           
  3227                           
  3228                           ;psect for function __doprnt
  3229  022C                     __doprnt:
  3230                           
  3231                           ;incstack = 0
  3232                           ; Regs used in __doprnt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3233                           ;__doprnt@pb stored from wreg
  3234  022C  1283               	bcf	3,5	;RP0=0, select bank0
  3235  022D  1303               	bcf	3,6	;RP1=0, select bank0
  3236  022E  00B0               	movwf	__doprnt@pb
  3237  022F                     l1974:
  3238                           
  3239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 471: _doprnt(stru
      +                          ct __prbuf * pb, register const char * f, register va_list ap);C:\Program Files\Microchi
      +                          p\xc8\v2.31\pic\sources\c90\common\doprnt.c: 472: {;C:\Program Files\Microchip\xc8\v2.31
      +                          \pic\sources\c90\common\doprnt.c: 512:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c90\common\doprnt.c: 521:  signed char prec;;C:\Program Files\Microchip\xc8\v2.
      +                          31\pic\sources\c90\common\doprnt.c: 525:  unsigned char flag;;C:\Program Files\Microchip
      +                          \xc8\v2.31\pic\sources\c90\common\doprnt.c: 543:  } tmpval;
  3240  022F  2B4B               	goto	l2036
  3241  0230                     l1976:
  3242                           
  3243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3244  0230  3025               	movlw	37
  3245  0231  062F               	xorwf	__doprnt@c,w
  3246  0232  1903               	btfsc	3,2
  3247  0233  2A35               	goto	u1431
  3248  0234  2A36               	goto	u1430
  3249  0235                     u1431:
  3250  0235  2A5C               	goto	l1986
  3251  0236                     u1430:
  3252  0236                     l1978:
  3253  0236  0A30               	incf	__doprnt@pb,w
  3254  0237  0084               	movwf	4
  3255  0238  1383               	bcf	3,7	;select IRP bank0
  3256  0239  0800               	movf	0,w
  3257  023A  1903               	btfsc	3,2
  3258  023B  2A3D               	goto	u1441
  3259  023C  2A3E               	goto	u1440
  3260  023D                     u1441:
  3261  023D  2A4D               	goto	l1982
  3262  023E                     u1440:
  3263  023E                     l1980:
  3264  023E  082F               	movf	__doprnt@c,w
  3265  023F  00A8               	movwf	??__doprnt
  3266  0240  0828               	movf	??__doprnt,w
  3267  0241  00F2               	movwf	putch@data
  3268  0242  0A30               	incf	__doprnt@pb,w
  3269  0243  0084               	movwf	4
  3270  0244  0800               	movf	0,w
  3271  0245  120A  118A  2026  120A  118A  	fcall	fptable
  3272  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3273  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3274  024C  2A2F               	goto	l1974
  3275  024D                     l1982:
  3276  024D  082F               	movf	__doprnt@c,w
  3277  024E  00A8               	movwf	??__doprnt
  3278  024F  0830               	movf	__doprnt@pb,w
  3279  0250  0084               	movwf	4
  3280  0251  0800               	movf	0,w
  3281  0252  0084               	movwf	4
  3282  0253  0828               	movf	??__doprnt,w
  3283  0254  0080               	movwf	0
  3284  0255                     l1984:
  3285  0255  3001               	movlw	1
  3286  0256  00A8               	movwf	??__doprnt
  3287  0257  0830               	movf	__doprnt@pb,w
  3288  0258  0084               	movwf	4
  3289  0259  0828               	movf	??__doprnt,w
  3290  025A  0780               	addwf	0,f
  3291  025B  2A2F               	goto	l1974
  3292  025C                     l1986:
  3293                           
  3294                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3295  025C  01AB               	clrf	__doprnt@flag
  3296  025D                     l1990:	
  3297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  3298                           
  3299  025D  3001               	movlw	1
  3300  025E  07A6               	addwf	__doprnt@f,f
  3301  025F  30FF               	movlw	-1
  3302  0260  0726               	addwf	__doprnt@f,w
  3303  0261  0084               	movwf	4
  3304  0262  120A  118A  2400  120A  118A  	fcall	stringdir
  3305  0267  00AF               	movwf	__doprnt@c
  3306  0268  00A8               	movwf	??__doprnt
  3307  0269  01A9               	clrf	??__doprnt+1
  3308                           
  3309                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3310                           ; Switch size 1, requested type "simple"
  3311                           ; Number of cases is 1, Range of values is 0 to 0
  3312                           ; switch strategies available:
  3313                           ; Name         Instructions Cycles
  3314                           ; simple_byte            4     3 (average)
  3315                           ; direct_byte           11     8 (fixed)
  3316                           ; jumptable            260     6 (fixed)
  3317                           ;	Chosen strategy is simple_byte
  3318  026A  0829               	movf	??__doprnt+1,w
  3319  026B  3A00               	xorlw	0	; case 0
  3320  026C  1903               	skipnz
  3321  026D  2A6F               	goto	l2290
  3322  026E  2B4B               	goto	l2036
  3323  026F                     l2290:
  3324                           
  3325                           ; Switch size 1, requested type "simple"
  3326                           ; Number of cases is 3, Range of values is 0 to 105
  3327                           ; switch strategies available:
  3328                           ; Name         Instructions Cycles
  3329                           ; simple_byte           10     6 (average)
  3330                           ; jumptable            260     6 (fixed)
  3331                           ;	Chosen strategy is simple_byte
  3332  026F  0828               	movf	??__doprnt,w
  3333  0270  3A00               	xorlw	0	; case 0
  3334  0271  1903               	skipnz
  3335  0272  2B5F               	goto	l2038
  3336  0273  3A64               	xorlw	100	; case 100
  3337  0274  1903               	skipnz
  3338  0275  2A7A               	goto	l1992
  3339  0276  3A0D               	xorlw	13	; case 105
  3340  0277  1903               	skipnz
  3341  0278  2A7A               	goto	l1992
  3342  0279  2B4B               	goto	l2036
  3343  027A                     l1992:
  3344                           
  3345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3346  027A  0827               	movf	__doprnt@ap,w
  3347  027B  0084               	movwf	4
  3348  027C  1383               	bcf	3,7	;select IRP bank0
  3349  027D  0800               	movf	0,w
  3350  027E  00A8               	movwf	??__doprnt
  3351  027F  3002               	movlw	2
  3352  0280  0780               	addwf	0,f
  3353  0281  0828               	movf	??__doprnt,w
  3354  0282  0084               	movwf	4
  3355  0283  0800               	movf	0,w
  3356  0284  00AD               	movwf	__doprnt@val
  3357  0285  0A84               	incf	4,f
  3358  0286  0800               	movf	0,w
  3359  0287  00AE               	movwf	__doprnt@val+1
  3360  0288                     l1994:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  3363  0288  1FAE               	btfss	__doprnt@val+1,7
  3364  0289  2A8B               	goto	u1451
  3365  028A  2A8C               	goto	u1450
  3366  028B                     u1451:
  3367  028B  2A95               	goto	l2000
  3368  028C                     u1450:
  3369  028C                     l1996:
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  3372  028C  3003               	movlw	3
  3373  028D  00A8               	movwf	??__doprnt
  3374  028E  0828               	movf	??__doprnt,w
  3375  028F  04AB               	iorwf	__doprnt@flag,f
  3376  0290                     l1998:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  3379  0290  09AD               	comf	__doprnt@val,f
  3380  0291  09AE               	comf	__doprnt@val+1,f
  3381  0292  0AAD               	incf	__doprnt@val,f
  3382  0293  1903               	skipnz
  3383  0294  0AAE               	incf	__doprnt@val+1,f
  3384  0295                     l2000:
  3385                           
  3386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  3387  0295  01AF               	clrf	__doprnt@c
  3388  0296  0AAF               	incf	__doprnt@c,f
  3389  0297                     l2006:
  3390                           
  3391                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3392  0297  082F               	movf	__doprnt@c,w
  3393  0298  00A8               	movwf	??__doprnt
  3394  0299  0728               	addwf	??__doprnt,w
  3395  029A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3396  029B  0084               	movwf	4
  3397  029C  120A  118A  2400  120A  118A  	fcall	stringdir
  3398  02A1  00A9               	movwf	??__doprnt+1
  3399  02A2  120A  118A  2400  120A  118A  	fcall	stringdir
  3400  02A7  00AA               	movwf	??__doprnt+2
  3401  02A8  082A               	movf	??__doprnt+2,w
  3402  02A9  022E               	subwf	__doprnt@val+1,w
  3403  02AA  1D03               	skipz
  3404  02AB  2AAE               	goto	u1465
  3405  02AC  0829               	movf	??__doprnt+1,w
  3406  02AD  022D               	subwf	__doprnt@val,w
  3407  02AE                     u1465:
  3408  02AE  1803               	skipnc
  3409  02AF  2AB1               	goto	u1461
  3410  02B0  2AB2               	goto	u1460
  3411  02B1                     u1461:
  3412  02B1  2AB3               	goto	l2010
  3413  02B2                     u1460:
  3414  02B2  2ABD               	goto	l2012
  3415  02B3                     l2010:
  3416  02B3  3001               	movlw	1
  3417  02B4  00A8               	movwf	??__doprnt
  3418  02B5  0828               	movf	??__doprnt,w
  3419  02B6  07AF               	addwf	__doprnt@c,f
  3420  02B7  3005               	movlw	5
  3421  02B8  062F               	xorwf	__doprnt@c,w
  3422  02B9  1D03               	btfss	3,2
  3423  02BA  2ABC               	goto	u1471
  3424  02BB  2ABD               	goto	u1470
  3425  02BC                     u1471:
  3426  02BC  2A97               	goto	l2006
  3427  02BD                     u1470:
  3428  02BD                     l2012:
  3429                           
  3430                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  3431  02BD  082B               	movf	__doprnt@flag,w
  3432  02BE  3903               	andlw	3
  3433  02BF  1903               	btfsc	3,2
  3434  02C0  2AC2               	goto	u1481
  3435  02C1  2AC3               	goto	u1480
  3436  02C2                     u1481:
  3437  02C2  2AE6               	goto	l2022
  3438  02C3                     u1480:
  3439  02C3                     l2014:
  3440  02C3  0A30               	incf	__doprnt@pb,w
  3441  02C4  0084               	movwf	4
  3442  02C5  1383               	bcf	3,7	;select IRP bank0
  3443  02C6  0800               	movf	0,w
  3444  02C7  1903               	btfsc	3,2
  3445  02C8  2ACA               	goto	u1491
  3446  02C9  2ACB               	goto	u1490
  3447  02CA                     u1491:
  3448  02CA  2AD8               	goto	l2018
  3449  02CB                     u1490:
  3450  02CB                     l2016:
  3451  02CB  302D               	movlw	45
  3452  02CC  00A8               	movwf	??__doprnt
  3453  02CD  0828               	movf	??__doprnt,w
  3454  02CE  00F2               	movwf	putch@data
  3455  02CF  0A30               	incf	__doprnt@pb,w
  3456  02D0  0084               	movwf	4
  3457  02D1  0800               	movf	0,w
  3458  02D2  120A  118A  2026  120A  118A  	fcall	fptable
  3459  02D7  2AE6               	goto	l2022
  3460  02D8                     l2018:
  3461  02D8  302D               	movlw	45
  3462  02D9  00A8               	movwf	??__doprnt
  3463  02DA  0830               	movf	__doprnt@pb,w
  3464  02DB  0084               	movwf	4
  3465  02DC  0800               	movf	0,w
  3466  02DD  0084               	movwf	4
  3467  02DE  0828               	movf	??__doprnt,w
  3468  02DF  0080               	movwf	0
  3469  02E0                     l2020:
  3470  02E0  3001               	movlw	1
  3471  02E1  00A8               	movwf	??__doprnt
  3472  02E2  0830               	movf	__doprnt@pb,w
  3473  02E3  0084               	movwf	4
  3474  02E4  0828               	movf	??__doprnt,w
  3475  02E5  0780               	addwf	0,f
  3476  02E6                     l2022:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  3479  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3480  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3481  02E8  082F               	movf	__doprnt@c,w
  3482  02E9  00A8               	movwf	??__doprnt
  3483  02EA  0828               	movf	??__doprnt,w
  3484  02EB  00AC               	movwf	__doprnt@prec
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3487  02EC  2B40               	goto	l2034
  3488  02ED                     l2024:
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  3491  02ED  300A               	movlw	10
  3492  02EE  00A0               	movwf	___lwmod@divisor
  3493  02EF  3000               	movlw	0
  3494  02F0  00A1               	movwf	___lwmod@divisor+1
  3495  02F1  082C               	movf	__doprnt@prec,w
  3496  02F2  00A8               	movwf	??__doprnt
  3497  02F3  0728               	addwf	??__doprnt,w
  3498  02F4  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3499  02F5  0084               	movwf	4
  3500  02F6  120A  118A  2400  120A  118A  	fcall	stringdir
  3501  02FB  00F2               	movwf	___lwdiv@divisor
  3502  02FC  120A  118A  2400  120A  118A  	fcall	stringdir
  3503  0301  00F3               	movwf	___lwdiv@divisor+1
  3504  0302  082E               	movf	__doprnt@val+1,w
  3505  0303  00F5               	movwf	___lwdiv@dividend+1
  3506  0304  082D               	movf	__doprnt@val,w
  3507  0305  00F4               	movwf	___lwdiv@dividend
  3508  0306  120A  118A  26EF  120A  118A  	fcall	___lwdiv
  3509  030B  0873               	movf	?___lwdiv+1,w
  3510  030C  1283               	bcf	3,5	;RP0=0, select bank0
  3511  030D  1303               	bcf	3,6	;RP1=0, select bank0
  3512  030E  00A3               	movwf	___lwmod@dividend+1
  3513  030F  0872               	movf	?___lwdiv,w
  3514  0310  00A2               	movwf	___lwmod@dividend
  3515  0311  120A  118A  2770  120A  118A  	fcall	___lwmod
  3516  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0318  0820               	movf	?___lwmod,w
  3519  0319  3E30               	addlw	48
  3520  031A  00A9               	movwf	??__doprnt+1
  3521  031B  0829               	movf	??__doprnt+1,w
  3522  031C  00AF               	movwf	__doprnt@c
  3523  031D                     l2026:
  3524  031D  0A30               	incf	__doprnt@pb,w
  3525  031E  0084               	movwf	4
  3526  031F  1383               	bcf	3,7	;select IRP bank0
  3527  0320  0800               	movf	0,w
  3528  0321  1903               	btfsc	3,2
  3529  0322  2B24               	goto	u1501
  3530  0323  2B25               	goto	u1500
  3531  0324                     u1501:
  3532  0324  2B32               	goto	l2030
  3533  0325                     u1500:
  3534  0325                     l2028:
  3535  0325  082F               	movf	__doprnt@c,w
  3536  0326  00A8               	movwf	??__doprnt
  3537  0327  0828               	movf	??__doprnt,w
  3538  0328  00F2               	movwf	putch@data
  3539  0329  0A30               	incf	__doprnt@pb,w
  3540  032A  0084               	movwf	4
  3541  032B  0800               	movf	0,w
  3542  032C  120A  118A  2026  120A  118A  	fcall	fptable
  3543  0331  2B40               	goto	l2034
  3544  0332                     l2030:
  3545  0332  082F               	movf	__doprnt@c,w
  3546  0333  00A8               	movwf	??__doprnt
  3547  0334  0830               	movf	__doprnt@pb,w
  3548  0335  0084               	movwf	4
  3549  0336  0800               	movf	0,w
  3550  0337  0084               	movwf	4
  3551  0338  0828               	movf	??__doprnt,w
  3552  0339  0080               	movwf	0
  3553  033A                     l2032:
  3554  033A  3001               	movlw	1
  3555  033B  00A8               	movwf	??__doprnt
  3556  033C  0830               	movf	__doprnt@pb,w
  3557  033D  0084               	movwf	4
  3558  033E  0828               	movf	??__doprnt,w
  3559  033F  0780               	addwf	0,f
  3560  0340                     l2034:
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3563  0340  30FF               	movlw	255
  3564  0341  1283               	bcf	3,5	;RP0=0, select bank0
  3565  0342  1303               	bcf	3,6	;RP1=0, select bank0
  3566  0343  00A8               	movwf	??__doprnt
  3567  0344  0828               	movf	??__doprnt,w
  3568  0345  07AC               	addwf	__doprnt@prec,f
  3569  0346  0A2C               	incf	__doprnt@prec,w
  3570  0347  1D03               	btfss	3,2
  3571  0348  2B4A               	goto	u1511
  3572  0349  2B4B               	goto	u1510
  3573  034A                     u1511:
  3574  034A  2AED               	goto	l2024
  3575  034B                     u1510:
  3576  034B                     l2036:
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3579  034B  3001               	movlw	1
  3580  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3581  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3582  034E  07A6               	addwf	__doprnt@f,f
  3583  034F  30FF               	movlw	-1
  3584  0350  0726               	addwf	__doprnt@f,w
  3585  0351  0084               	movwf	4
  3586  0352  120A  118A  2400  120A  118A  	fcall	stringdir
  3587  0357  00A8               	movwf	??__doprnt
  3588  0358  0828               	movf	??__doprnt,w
  3589  0359  00AF               	movwf	__doprnt@c
  3590  035A  082F               	movf	__doprnt@c,w
  3591  035B  1D03               	btfss	3,2
  3592  035C  2B5E               	goto	u1521
  3593  035D  2B5F               	goto	u1520
  3594  035E                     u1521:
  3595  035E  2A30               	goto	l1976
  3596  035F                     u1520:
  3597  035F                     l2038:
  3598                           
  3599                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1566:  return 0;
  3600  035F  01A6               	clrf	?__doprnt
  3601  0360  01A7               	clrf	?__doprnt+1
  3602  0361                     l790:
  3603  0361  0008               	return
  3604  0362                     __end_of__doprnt:
  3605                           
  3606                           	psect	text15
  3607  0FEE                     __ptext15:	
  3608 ;; *************** function _putch *****************
  3609 ;; Defined at:
  3610 ;;		line 237 in file "main.c"
  3611 ;; Parameters:    Size  Location     Type
  3612 ;;  data            1    2[COMMON] unsigned char 
  3613 ;; Auto vars:     Size  Location     Type
  3614 ;;		None
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3624 ;;      Params:         1       0       0       0       0
  3625 ;;      Locals:         0       0       0       0       0
  3626 ;;      Temps:          0       0       0       0       0
  3627 ;;      Totals:         1       0       0       0       0
  3628 ;;Total ram usage:        1 bytes
  3629 ;; Hardware stack levels used:    1
  3630 ;; Hardware stack levels required when called:    1
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_printf
  3635 ;;		__doprnt
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function _putch
  3641  0FEE                     _putch:
  3642  0FEE                     l1448:	
  3643                           ;incstack = 0
  3644                           ; Regs used in _putch: [wreg]
  3645                           
  3646  0FEE                     l134:	
  3647                           ;main.c: 238:     while(TXIF == 0);
  3648                           
  3649  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  3650  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  3651  0FF0  1E0C               	btfss	12,4	;volatile
  3652  0FF1  2FF3               	goto	u691
  3653  0FF2  2FF4               	goto	u690
  3654  0FF3                     u691:
  3655  0FF3  2FEE               	goto	l134
  3656  0FF4                     u690:
  3657  0FF4                     l1450:
  3658                           
  3659                           ;main.c: 239:     TXREG = data;
  3660  0FF4  0872               	movf	putch@data,w
  3661  0FF5  0099               	movwf	25	;volatile
  3662  0FF6                     l137:
  3663  0FF6  0008               	return
  3664  0FF7                     __end_of_putch:
  3665                           
  3666                           	psect	text16
  3667  0770                     __ptext16:	
  3668 ;; *************** function ___lwmod *****************
  3669 ;; Defined at:
  3670 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  divisor         2    0[BANK0 ] unsigned int 
  3673 ;;  dividend        2    2[BANK0 ] unsigned int 
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;  counter         1    5[BANK0 ] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  2    0[BANK0 ] unsigned int 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3685 ;;      Params:         0       4       0       0       0
  3686 ;;      Locals:         0       1       0       0       0
  3687 ;;      Temps:          0       1       0       0       0
  3688 ;;      Totals:         0       6       0       0       0
  3689 ;;Total ram usage:        6 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    1
  3692 ;; This function calls:
  3693 ;;		Nothing
  3694 ;; This function is called by:
  3695 ;;		__doprnt
  3696 ;; This function uses a non-reentrant model
  3697 ;;
  3698                           
  3699                           
  3700                           ;psect for function ___lwmod
  3701  0770                     ___lwmod:
  3702  0770                     l1952:	
  3703                           ;incstack = 0
  3704                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3705                           
  3706  0770  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0771  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0772  0820               	movf	___lwmod@divisor,w
  3709  0773  0421               	iorwf	___lwmod@divisor+1,w
  3710  0774  1903               	btfsc	3,2
  3711  0775  2F77               	goto	u1371
  3712  0776  2F78               	goto	u1370
  3713  0777                     u1371:
  3714  0777  2FA7               	goto	l1970
  3715  0778                     u1370:
  3716  0778                     l1954:
  3717  0778  01A5               	clrf	___lwmod@counter
  3718  0779  0AA5               	incf	___lwmod@counter,f
  3719  077A  2F86               	goto	l1960
  3720  077B                     l1956:
  3721  077B  3001               	movlw	1
  3722  077C                     u1385:
  3723  077C  1003               	clrc
  3724  077D  0DA0               	rlf	___lwmod@divisor,f
  3725  077E  0DA1               	rlf	___lwmod@divisor+1,f
  3726  077F  3EFF               	addlw	-1
  3727  0780  1D03               	skipz
  3728  0781  2F7C               	goto	u1385
  3729  0782                     l1958:
  3730  0782  3001               	movlw	1
  3731  0783  00A4               	movwf	??___lwmod
  3732  0784  0824               	movf	??___lwmod,w
  3733  0785  07A5               	addwf	___lwmod@counter,f
  3734  0786                     l1960:
  3735  0786  1FA1               	btfss	___lwmod@divisor+1,7
  3736  0787  2F89               	goto	u1391
  3737  0788  2F8A               	goto	u1390
  3738  0789                     u1391:
  3739  0789  2F7B               	goto	l1956
  3740  078A                     u1390:
  3741  078A                     l1962:
  3742  078A  0821               	movf	___lwmod@divisor+1,w
  3743  078B  0223               	subwf	___lwmod@dividend+1,w
  3744  078C  1D03               	skipz
  3745  078D  2F90               	goto	u1405
  3746  078E  0820               	movf	___lwmod@divisor,w
  3747  078F  0222               	subwf	___lwmod@dividend,w
  3748  0790                     u1405:
  3749  0790  1C03               	skipc
  3750  0791  2F93               	goto	u1401
  3751  0792  2F94               	goto	u1400
  3752  0793                     u1401:
  3753  0793  2F9A               	goto	l1966
  3754  0794                     u1400:
  3755  0794                     l1964:
  3756  0794  0820               	movf	___lwmod@divisor,w
  3757  0795  02A2               	subwf	___lwmod@dividend,f
  3758  0796  0821               	movf	___lwmod@divisor+1,w
  3759  0797  1C03               	skipc
  3760  0798  03A3               	decf	___lwmod@dividend+1,f
  3761  0799  02A3               	subwf	___lwmod@dividend+1,f
  3762  079A                     l1966:
  3763  079A  3001               	movlw	1
  3764  079B                     u1415:
  3765  079B  1003               	clrc
  3766  079C  0CA1               	rrf	___lwmod@divisor+1,f
  3767  079D  0CA0               	rrf	___lwmod@divisor,f
  3768  079E  3EFF               	addlw	-1
  3769  079F  1D03               	skipz
  3770  07A0  2F9B               	goto	u1415
  3771  07A1                     l1968:
  3772  07A1  3001               	movlw	1
  3773  07A2  02A5               	subwf	___lwmod@counter,f
  3774  07A3  1D03               	btfss	3,2
  3775  07A4  2FA6               	goto	u1421
  3776  07A5  2FA7               	goto	u1420
  3777  07A6                     u1421:
  3778  07A6  2F8A               	goto	l1962
  3779  07A7                     u1420:
  3780  07A7                     l1970:
  3781  07A7  0823               	movf	___lwmod@dividend+1,w
  3782  07A8  00A1               	movwf	?___lwmod+1
  3783  07A9  0822               	movf	___lwmod@dividend,w
  3784  07AA  00A0               	movwf	?___lwmod
  3785  07AB                     l557:
  3786  07AB  0008               	return
  3787  07AC                     __end_of___lwmod:
  3788                           
  3789                           	psect	text17
  3790  06EF                     __ptext17:	
  3791 ;; *************** function ___lwdiv *****************
  3792 ;; Defined at:
  3793 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  divisor         2    2[COMMON] unsigned int 
  3796 ;;  dividend        2    4[COMMON] unsigned int 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  quotient        2    7[COMMON] unsigned int 
  3799 ;;  counter         1    9[COMMON] unsigned char 
  3800 ;; Return value:  Size  Location     Type
  3801 ;;                  2    2[COMMON] unsigned int 
  3802 ;; Registers used:
  3803 ;;		wreg, status,2, status,0
  3804 ;; Tracked objects:
  3805 ;;		On entry : 0/0
  3806 ;;		On exit  : 0/0
  3807 ;;		Unchanged: 0/0
  3808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3809 ;;      Params:         4       0       0       0       0
  3810 ;;      Locals:         3       0       0       0       0
  3811 ;;      Temps:          1       0       0       0       0
  3812 ;;      Totals:         8       0       0       0       0
  3813 ;;Total ram usage:        8 bytes
  3814 ;; Hardware stack levels used:    1
  3815 ;; Hardware stack levels required when called:    1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		__doprnt
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           
  3824                           ;psect for function ___lwdiv
  3825  06EF                     ___lwdiv:
  3826  06EF                     l1454:	
  3827                           ;incstack = 0
  3828                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3829                           
  3830  06EF  01F7               	clrf	___lwdiv@quotient
  3831  06F0  01F8               	clrf	___lwdiv@quotient+1
  3832  06F1                     l1456:
  3833  06F1  0872               	movf	___lwdiv@divisor,w
  3834  06F2  0473               	iorwf	___lwdiv@divisor+1,w
  3835  06F3  1903               	btfsc	3,2
  3836  06F4  2EF6               	goto	u701
  3837  06F5  2EF7               	goto	u700
  3838  06F6                     u701:
  3839  06F6  2F2E               	goto	l1476
  3840  06F7                     u700:
  3841  06F7                     l1458:
  3842  06F7  01F9               	clrf	___lwdiv@counter
  3843  06F8  0AF9               	incf	___lwdiv@counter,f
  3844  06F9  2F05               	goto	l1464
  3845  06FA                     l1460:
  3846  06FA  3001               	movlw	1
  3847  06FB                     u715:
  3848  06FB  1003               	clrc
  3849  06FC  0DF2               	rlf	___lwdiv@divisor,f
  3850  06FD  0DF3               	rlf	___lwdiv@divisor+1,f
  3851  06FE  3EFF               	addlw	-1
  3852  06FF  1D03               	skipz
  3853  0700  2EFB               	goto	u715
  3854  0701                     l1462:
  3855  0701  3001               	movlw	1
  3856  0702  00F6               	movwf	??___lwdiv
  3857  0703  0876               	movf	??___lwdiv,w
  3858  0704  07F9               	addwf	___lwdiv@counter,f
  3859  0705                     l1464:
  3860  0705  1FF3               	btfss	___lwdiv@divisor+1,7
  3861  0706  2F08               	goto	u721
  3862  0707  2F09               	goto	u720
  3863  0708                     u721:
  3864  0708  2EFA               	goto	l1460
  3865  0709                     u720:
  3866  0709                     l1466:
  3867  0709  3001               	movlw	1
  3868  070A                     u735:
  3869  070A  1003               	clrc
  3870  070B  0DF7               	rlf	___lwdiv@quotient,f
  3871  070C  0DF8               	rlf	___lwdiv@quotient+1,f
  3872  070D  3EFF               	addlw	-1
  3873  070E  1D03               	skipz
  3874  070F  2F0A               	goto	u735
  3875  0710  0873               	movf	___lwdiv@divisor+1,w
  3876  0711  0275               	subwf	___lwdiv@dividend+1,w
  3877  0712  1D03               	skipz
  3878  0713  2F16               	goto	u745
  3879  0714  0872               	movf	___lwdiv@divisor,w
  3880  0715  0274               	subwf	___lwdiv@dividend,w
  3881  0716                     u745:
  3882  0716  1C03               	skipc
  3883  0717  2F19               	goto	u741
  3884  0718  2F1A               	goto	u740
  3885  0719                     u741:
  3886  0719  2F21               	goto	l1472
  3887  071A                     u740:
  3888  071A                     l1468:
  3889  071A  0872               	movf	___lwdiv@divisor,w
  3890  071B  02F4               	subwf	___lwdiv@dividend,f
  3891  071C  0873               	movf	___lwdiv@divisor+1,w
  3892  071D  1C03               	skipc
  3893  071E  03F5               	decf	___lwdiv@dividend+1,f
  3894  071F  02F5               	subwf	___lwdiv@dividend+1,f
  3895  0720                     l1470:
  3896  0720  1477               	bsf	___lwdiv@quotient,0
  3897  0721                     l1472:
  3898  0721  3001               	movlw	1
  3899  0722                     u755:
  3900  0722  1003               	clrc
  3901  0723  0CF3               	rrf	___lwdiv@divisor+1,f
  3902  0724  0CF2               	rrf	___lwdiv@divisor,f
  3903  0725  3EFF               	addlw	-1
  3904  0726  1D03               	skipz
  3905  0727  2F22               	goto	u755
  3906  0728                     l1474:
  3907  0728  3001               	movlw	1
  3908  0729  02F9               	subwf	___lwdiv@counter,f
  3909  072A  1D03               	btfss	3,2
  3910  072B  2F2D               	goto	u761
  3911  072C  2F2E               	goto	u760
  3912  072D                     u761:
  3913  072D  2F09               	goto	l1466
  3914  072E                     u760:
  3915  072E                     l1476:
  3916  072E  0878               	movf	___lwdiv@quotient+1,w
  3917  072F  00F3               	movwf	?___lwdiv+1
  3918  0730  0877               	movf	___lwdiv@quotient,w
  3919  0731  00F2               	movwf	?___lwdiv
  3920  0732                     l547:
  3921  0732  0008               	return
  3922  0733                     __end_of___lwdiv:
  3923                           
  3924                           	psect	text18
  3925  04E1                     __ptext18:	
  3926 ;; *************** function _atoi *****************
  3927 ;; Defined at:
  3928 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\atoi.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;  s               1    wreg     PTR const unsigned char 
  3931 ;;		 -> concat@s1(20), 
  3932 ;; Auto vars:     Size  Location     Type
  3933 ;;  s               1    5[BANK0 ] PTR const unsigned char 
  3934 ;;		 -> concat@s1(20), 
  3935 ;;  a               2    3[BANK0 ] int 
  3936 ;;  sign            1    2[BANK0 ] unsigned char 
  3937 ;; Return value:  Size  Location     Type
  3938 ;;                  2    8[COMMON] int 
  3939 ;; Registers used:
  3940 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3941 ;; Tracked objects:
  3942 ;;		On entry : 0/0
  3943 ;;		On exit  : 0/0
  3944 ;;		Unchanged: 0/0
  3945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3946 ;;      Params:         2       0       0       0       0
  3947 ;;      Locals:         0       4       0       0       0
  3948 ;;      Temps:          0       2       0       0       0
  3949 ;;      Totals:         2       6       0       0       0
  3950 ;;Total ram usage:        8 bytes
  3951 ;; Hardware stack levels used:    1
  3952 ;; Hardware stack levels required when called:    2
  3953 ;; This function calls:
  3954 ;;		___wmul
  3955 ;;		_isdigit
  3956 ;; This function is called by:
  3957 ;;		_concat
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _atoi
  3963  04E1                     _atoi:
  3964                           
  3965                           ;incstack = 0
  3966                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3967                           ;atoi@s stored from wreg
  3968  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  3969  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  3970  04E3  00A5               	movwf	atoi@s
  3971  04E4                     l2058:
  3972  04E4  2CE9               	goto	l2062
  3973  04E5                     l2060:
  3974  04E5  3001               	movlw	1
  3975  04E6  00A0               	movwf	??_atoi
  3976  04E7  0820               	movf	??_atoi,w
  3977  04E8  07A5               	addwf	atoi@s,f
  3978  04E9                     l2062:
  3979  04E9  0825               	movf	atoi@s,w
  3980  04EA  0084               	movwf	4
  3981  04EB  3020               	movlw	32
  3982  04EC  1383               	bcf	3,7	;select IRP bank0
  3983  04ED  0600               	xorwf	0,w
  3984  04EE  1903               	btfsc	3,2
  3985  04EF  2CF1               	goto	u1531
  3986  04F0  2CF2               	goto	u1530
  3987  04F1                     u1531:
  3988  04F1  2CE5               	goto	l2060
  3989  04F2                     u1530:
  3990  04F2                     l2064:
  3991  04F2  0825               	movf	atoi@s,w
  3992  04F3  0084               	movwf	4
  3993  04F4  3009               	movlw	9
  3994  04F5  0600               	xorwf	0,w
  3995  04F6  1903               	btfsc	3,2
  3996  04F7  2CF9               	goto	u1541
  3997  04F8  2CFA               	goto	u1540
  3998  04F9                     u1541:
  3999  04F9  2CE5               	goto	l2060
  4000  04FA                     u1540:
  4001  04FA                     l2066:
  4002  04FA  01A3               	clrf	atoi@a
  4003  04FB  01A4               	clrf	atoi@a+1
  4004  04FC  01A2               	clrf	atoi@sign
  4005  04FD                     l2068:
  4006  04FD  0825               	movf	atoi@s,w
  4007  04FE  0084               	movwf	4
  4008  04FF  302D               	movlw	45
  4009  0500  0600               	xorwf	0,w
  4010  0501  1D03               	btfss	3,2
  4011  0502  2D04               	goto	u1551
  4012  0503  2D05               	goto	u1550
  4013  0504                     u1551:
  4014  0504  2D0E               	goto	l2072
  4015  0505                     u1550:
  4016  0505                     l2070:
  4017  0505  3001               	movlw	1
  4018  0506  00A0               	movwf	??_atoi
  4019  0507  0820               	movf	??_atoi,w
  4020  0508  07A2               	addwf	atoi@sign,f
  4021  0509  3001               	movlw	1
  4022  050A  00A0               	movwf	??_atoi
  4023  050B  0820               	movf	??_atoi,w
  4024  050C  07A5               	addwf	atoi@s,f
  4025  050D  2D40               	goto	l2080
  4026  050E                     l2072:
  4027  050E  0825               	movf	atoi@s,w
  4028  050F  0084               	movwf	4
  4029  0510  302B               	movlw	43
  4030  0511  0600               	xorwf	0,w
  4031  0512  1D03               	btfss	3,2
  4032  0513  2D15               	goto	u1561
  4033  0514  2D16               	goto	u1560
  4034  0515                     u1561:
  4035  0515  2D40               	goto	l2080
  4036  0516                     u1560:
  4037  0516                     l2074:
  4038  0516  3001               	movlw	1
  4039  0517  00A0               	movwf	??_atoi
  4040  0518  0820               	movf	??_atoi,w
  4041  0519  07A5               	addwf	atoi@s,f
  4042  051A  2D40               	goto	l2080
  4043  051B                     l2076:
  4044  051B  1283               	bcf	3,5	;RP0=0, select bank0
  4045  051C  1303               	bcf	3,6	;RP1=0, select bank0
  4046  051D  0825               	movf	atoi@s,w
  4047  051E  0084               	movwf	4
  4048  051F  0824               	movf	atoi@a+1,w
  4049  0520  00F3               	movwf	___wmul@multiplier+1
  4050  0521  0823               	movf	atoi@a,w
  4051  0522  00F2               	movwf	___wmul@multiplier
  4052  0523  300A               	movlw	10
  4053  0524  00F4               	movwf	___wmul@multiplicand
  4054  0525  3000               	movlw	0
  4055  0526  00F5               	movwf	___wmul@multiplicand+1
  4056  0527  120A  118A  238B  120A  118A  	fcall	___wmul
  4057  052C  1383               	bcf	3,7	;select IRP bank0
  4058  052D  0800               	movf	0,w
  4059  052E  0772               	addwf	?___wmul,w
  4060  052F  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0530  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0531  00A0               	movwf	??_atoi
  4063  0532  3000               	movlw	0
  4064  0533  1803               	skipnc
  4065  0534  3001               	movlw	1
  4066  0535  0773               	addwf	?___wmul+1,w
  4067  0536  00A1               	movwf	??_atoi+1
  4068  0537  0820               	movf	??_atoi,w
  4069  0538  3ED0               	addlw	208
  4070  0539  00A3               	movwf	atoi@a
  4071  053A  0821               	movf	??_atoi+1,w
  4072  053B  1803               	skipnc
  4073  053C  3E01               	addlw	1
  4074  053D  3EFF               	addlw	255
  4075  053E  00A4               	movwf	atoi@a+1
  4076  053F  2D16               	goto	l2074
  4077  0540                     l2080:
  4078  0540  0825               	movf	atoi@s,w
  4079  0541  0084               	movwf	4
  4080  0542  0800               	movf	0,w
  4081  0543  120A  118A  23E7  120A  118A  	fcall	_isdigit
  4082  0548  1803               	btfsc	3,0
  4083  0549  2D4B               	goto	u1571
  4084  054A  2D4C               	goto	u1570
  4085  054B                     u1571:
  4086  054B  2D1B               	goto	l2076
  4087  054C                     u1570:
  4088  054C                     l2082:
  4089  054C  1283               	bcf	3,5	;RP0=0, select bank0
  4090  054D  1303               	bcf	3,6	;RP1=0, select bank0
  4091  054E  0822               	movf	atoi@sign,w
  4092  054F  1903               	btfsc	3,2
  4093  0550  2D52               	goto	u1581
  4094  0551  2D53               	goto	u1580
  4095  0552                     u1581:
  4096  0552  2D5F               	goto	l2088
  4097  0553                     u1580:
  4098  0553                     l2084:
  4099  0553  0923               	comf	atoi@a,w
  4100  0554  00A0               	movwf	??_atoi
  4101  0555  0924               	comf	atoi@a+1,w
  4102  0556  00A1               	movwf	??_atoi+1
  4103  0557  0AA0               	incf	??_atoi,f
  4104  0558  1903               	skipnz
  4105  0559  0AA1               	incf	??_atoi+1,f
  4106  055A  0820               	movf	??_atoi,w
  4107  055B  00F8               	movwf	?_atoi
  4108  055C  0821               	movf	??_atoi+1,w
  4109  055D  00F9               	movwf	?_atoi+1
  4110  055E  2D63               	goto	l738
  4111  055F                     l2088:
  4112  055F  0824               	movf	atoi@a+1,w
  4113  0560  00F9               	movwf	?_atoi+1
  4114  0561  0823               	movf	atoi@a,w
  4115  0562  00F8               	movwf	?_atoi
  4116  0563                     l738:
  4117  0563  0008               	return
  4118  0564                     __end_of_atoi:
  4119                           
  4120                           	psect	text19
  4121  03E7                     __ptext19:	
  4122 ;; *************** function _isdigit *****************
  4123 ;; Defined at:
  4124 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  c               1    wreg     unsigned char 
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;  c               1    3[COMMON] unsigned char 
  4129 ;; Return value:  Size  Location     Type
  4130 ;;		None               void
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4138 ;;      Params:         0       0       0       0       0
  4139 ;;      Locals:         2       0       0       0       0
  4140 ;;      Temps:          0       0       0       0       0
  4141 ;;      Totals:         2       0       0       0       0
  4142 ;;Total ram usage:        2 bytes
  4143 ;; Hardware stack levels used:    1
  4144 ;; Hardware stack levels required when called:    1
  4145 ;; This function calls:
  4146 ;;		Nothing
  4147 ;; This function is called by:
  4148 ;;		_atoi
  4149 ;; This function uses a non-reentrant model
  4150 ;;
  4151                           
  4152                           
  4153                           ;psect for function _isdigit
  4154  03E7                     _isdigit:
  4155                           
  4156                           ;incstack = 0
  4157                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4158                           ;isdigit@c stored from wreg
  4159  03E7  00F3               	movwf	isdigit@c
  4160  03E8                     l1516:
  4161  03E8  01F2               	clrf	_isdigit$1034
  4162  03E9                     l1518:
  4163  03E9  303A               	movlw	58
  4164  03EA  0273               	subwf	isdigit@c,w
  4165  03EB  1803               	skipnc
  4166  03EC  2BEE               	goto	u871
  4167  03ED  2BEF               	goto	u870
  4168  03EE                     u871:
  4169  03EE  2BF7               	goto	l1524
  4170  03EF                     u870:
  4171  03EF                     l1520:
  4172  03EF  3030               	movlw	48
  4173  03F0  0273               	subwf	isdigit@c,w
  4174  03F1  1C03               	skipc
  4175  03F2  2BF4               	goto	u881
  4176  03F3  2BF5               	goto	u880
  4177  03F4                     u881:
  4178  03F4  2BF7               	goto	l1524
  4179  03F5                     u880:
  4180  03F5                     l1522:
  4181  03F5  01F2               	clrf	_isdigit$1034
  4182  03F6  0AF2               	incf	_isdigit$1034,f
  4183  03F7                     l1524:
  4184  03F7  0C72               	rrf	_isdigit$1034,w
  4185  03F8                     l743:
  4186  03F8  0008               	return
  4187  03F9                     __end_of_isdigit:
  4188                           
  4189                           	psect	text20
  4190  038B                     __ptext20:	
  4191 ;; *************** function ___wmul *****************
  4192 ;; Defined at:
  4193 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;  multiplier      2    2[COMMON] unsigned int 
  4196 ;;  multiplicand    2    4[COMMON] unsigned int 
  4197 ;; Auto vars:     Size  Location     Type
  4198 ;;  product         2    6[COMMON] unsigned int 
  4199 ;; Return value:  Size  Location     Type
  4200 ;;                  2    2[COMMON] unsigned int 
  4201 ;; Registers used:
  4202 ;;		wreg, status,2, status,0
  4203 ;; Tracked objects:
  4204 ;;		On entry : 0/0
  4205 ;;		On exit  : 0/0
  4206 ;;		Unchanged: 0/0
  4207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4208 ;;      Params:         4       0       0       0       0
  4209 ;;      Locals:         2       0       0       0       0
  4210 ;;      Temps:          0       0       0       0       0
  4211 ;;      Totals:         6       0       0       0       0
  4212 ;;Total ram usage:        6 bytes
  4213 ;; Hardware stack levels used:    1
  4214 ;; Hardware stack levels required when called:    1
  4215 ;; This function calls:
  4216 ;;		Nothing
  4217 ;; This function is called by:
  4218 ;;		_atoi
  4219 ;; This function uses a non-reentrant model
  4220 ;;
  4221                           
  4222                           
  4223                           ;psect for function ___wmul
  4224  038B                     ___wmul:
  4225  038B                     l1502:	
  4226                           ;incstack = 0
  4227                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4228                           
  4229  038B  01F6               	clrf	___wmul@product
  4230  038C  01F7               	clrf	___wmul@product+1
  4231  038D                     l1504:
  4232  038D  1C72               	btfss	___wmul@multiplier,0
  4233  038E  2B90               	goto	u831
  4234  038F  2B91               	goto	u830
  4235  0390                     u831:
  4236  0390  2B97               	goto	l275
  4237  0391                     u830:
  4238  0391                     l1506:
  4239  0391  0874               	movf	___wmul@multiplicand,w
  4240  0392  07F6               	addwf	___wmul@product,f
  4241  0393  1803               	skipnc
  4242  0394  0AF7               	incf	___wmul@product+1,f
  4243  0395  0875               	movf	___wmul@multiplicand+1,w
  4244  0396  07F7               	addwf	___wmul@product+1,f
  4245  0397                     l275:
  4246  0397  3001               	movlw	1
  4247  0398                     u845:
  4248  0398  1003               	clrc
  4249  0399  0DF4               	rlf	___wmul@multiplicand,f
  4250  039A  0DF5               	rlf	___wmul@multiplicand+1,f
  4251  039B  3EFF               	addlw	-1
  4252  039C  1D03               	skipz
  4253  039D  2B98               	goto	u845
  4254  039E                     l1508:
  4255  039E  3001               	movlw	1
  4256  039F                     u855:
  4257  039F  1003               	clrc
  4258  03A0  0CF3               	rrf	___wmul@multiplier+1,f
  4259  03A1  0CF2               	rrf	___wmul@multiplier,f
  4260  03A2  3EFF               	addlw	-1
  4261  03A3  1D03               	skipz
  4262  03A4  2B9F               	goto	u855
  4263  03A5                     l1510:
  4264  03A5  0872               	movf	___wmul@multiplier,w
  4265  03A6  0473               	iorwf	___wmul@multiplier+1,w
  4266  03A7  1D03               	btfss	3,2
  4267  03A8  2BAA               	goto	u861
  4268  03A9  2BAB               	goto	u860
  4269  03AA                     u861:
  4270  03AA  2B8D               	goto	l1504
  4271  03AB                     u860:
  4272  03AB                     l1512:
  4273  03AB  0877               	movf	___wmul@product+1,w
  4274  03AC  00F3               	movwf	?___wmul+1
  4275  03AD  0876               	movf	___wmul@product,w
  4276  03AE  00F2               	movwf	?___wmul
  4277  03AF                     l277:
  4278  03AF  0008               	return
  4279  03B0                     __end_of___wmul:
  4280                           
  4281                           	psect	text21
  4282  0FE7                     __ptext21:	
  4283 ;; *************** function _isr *****************
  4284 ;; Defined at:
  4285 ;;		line 71 in file "main.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;		None
  4288 ;; Auto vars:     Size  Location     Type
  4289 ;;		None
  4290 ;; Return value:  Size  Location     Type
  4291 ;;                  1    wreg      void 
  4292 ;; Registers used:
  4293 ;;		None
  4294 ;; Tracked objects:
  4295 ;;		On entry : 0/0
  4296 ;;		On exit  : 0/0
  4297 ;;		Unchanged: 0/0
  4298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4299 ;;      Params:         0       0       0       0       0
  4300 ;;      Locals:         0       0       0       0       0
  4301 ;;      Temps:          2       0       0       0       0
  4302 ;;      Totals:         2       0       0       0       0
  4303 ;;Total ram usage:        2 bytes
  4304 ;; Hardware stack levels used:    1
  4305 ;; This function calls:
  4306 ;;		Nothing
  4307 ;; This function is called by:
  4308 ;;		Interrupt level 1
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           
  4312                           
  4313                           ;psect for function _isr
  4314  0FE7                     _isr:
  4315  0FE7                     i1l91:
  4316  0FE7  0871               	movf	??_isr+1,w
  4317  0FE8  008A               	movwf	10
  4318  0FE9  0E70               	swapf	??_isr,w
  4319  0FEA  0083               	movwf	3
  4320  0FEB  0EFE               	swapf	btemp,f
  4321  0FEC  0E7E               	swapf	btemp,w
  4322  0FED  0009               	retfie
  4323  0FEE                     __end_of_isr:
  4324  0002                     
  4325                           	psect	intentry
  4326  0004                     __pintentry:	
  4327                           ;incstack = 0
  4328                           ; Regs used in _isr: []
  4329                           
  4330  0004                     interrupt_function:
  4331  007E                     saved_w	set	btemp
  4332  0004  00FE               	movwf	btemp
  4333  0005  0E03               	swapf	3,w
  4334  0006  00F0               	movwf	??_isr
  4335  0007  080A               	movf	10,w
  4336  0008  00F1               	movwf	??_isr+1
  4337  0009  120A  158A  2FE7   	ljmp	_isr
  4338                           
  4339                           	psect	functab
  4340  0026                     __pfunctab:
  4341  0026                     __fptable:
  4342  0026                     fptable:
  4343  0026  00FF               	movwf	(btemp+1)& (0+127)
  4344  0027  3000               	movlw	high fptable
  4345  0028  008A               	movwf	10
  4346  0029  087F               	movf	(btemp+1)& (0+127),w
  4347  002A  0782               	addwf	2,f
  4348  002B                     fpbase:
  4349  002B  282B               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  4350  002C                     fp__putch:
  4351  002C  120A  158A  2FEE   	ljmp	_putch
  4352  002F                     __end_of__fptable:
  4353  007E                     btemp	set	126	;btemp
  4354  007E                     wtemp0	set	126
  4355                           
  4356                           	psect	config
  4357                           
  4358                           ;Config register CONFIG1 @ 0x2007
  4359                           ;	Oscillator Selection bits
  4360                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4361                           ;	Watchdog Timer Enable bit
  4362                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4363                           ;	Power-up Timer Enable bit
  4364                           ;	PWRTE = OFF, PWRT disabled
  4365                           ;	RE3/MCLR pin function select bit
  4366                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4367                           ;	Code Protection bit
  4368                           ;	CP = OFF, Program memory code protection is disabled
  4369                           ;	Data Code Protection bit
  4370                           ;	CPD = OFF, Data memory code protection is disabled
  4371                           ;	Brown Out Reset Selection bits
  4372                           ;	BOREN = OFF, BOR disabled
  4373                           ;	Internal External Switchover bit
  4374                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4375                           ;	Fail-Safe Clock Monitor Enabled bit
  4376                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4377                           ;	Low Voltage Programming Enable bit
  4378                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4379                           ;	In-Circuit Debugger Mode bit
  4380                           ;	DEBUG = 0x1, unprogrammed default
  4381  2007                     	org	8199
  4382  2007  20D4               	dw	8404
  4383                           
  4384                           ;Config register CONFIG2 @ 0x2008
  4385                           ;	Brown-out Reset Selection bit
  4386                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4387                           ;	Flash Program Memory Self Write Enable bits
  4388                           ;	WRT = OFF, Write protection off
  4389  2008                     	org	8200
  4390  2008  3FFF               	dw	16383

Data Sizes:
    Strings     209
    Constant    10
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     74      77
    BANK1            80      5      15
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strcat@from	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_11(CODE[3]), STR_10(CODE[3]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@f	PTR const unsigned char  size(1) Largest target is 62
		 -> STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[25]), STR_8(CODE[62]), 
		 -> STR_7(CODE[58]), STR_6(CODE[2]), STR_5(CODE[3]), STR_4(CODE[31]), 
		 -> STR_3(CODE[2]), STR_2(CODE[3]), STR_1(CODE[30]), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(BANK0[2]), printf@pb(BANK0[2]), 

    printf@f	PTR const unsigned char  size(1) Largest target is 62
		 -> STR_9(CODE[25]), STR_8(CODE[62]), STR_7(CODE[58]), STR_6(CODE[2]), 
		 -> STR_5(CODE[3]), STR_4(CODE[31]), STR_3(CODE[2]), STR_2(CODE[3]), 
		 -> STR_1(CODE[30]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    S1036__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), putch(), 

    S1036__prbuf$ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 20
		 -> NULL(NULL[0]), concat@s2(BANK0[20]), concat@s1(BANK0[20]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> concat@s1(BANK0[20]), 


Critical Paths under _main in COMMON

    _setup->_spiInit
    _mensaje->_division
    _division->___awmod
    _concat->_atoi
    __doprnt->___lwdiv
    ___lwmod->___lwdiv
    _atoi->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _mensaje->_concat
    _printf->__doprnt
    _division->___awdiv
    _concat->_sprintf
    _sprintf->__doprnt
    __doprnt->___lwmod

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_mensaje

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    9113
                                             73 BANK0      1     1      0
                            _mensaje
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              2 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _mensaje                                              5     5      0    8731
                                              0 BANK1      5     5      0
                             _concat
                           _division
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     6      2    2841
                                             17 BANK0      8     6      2
                            __doprnt
 ---------------------------------------------------------------------------------
 (2) _division                                             4     4      0    1467
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     600
                                              2 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     805
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _concat                                              47    43      4    4423
                                             26 BANK0     47    43      4
                               _atoi
                            _sprintf
                             _strcat
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     207
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _sprintf                                              9     6      3    2845
                                             17 BANK0      9     6      3
                            __doprnt
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             19    17      2    2330
                                              6 BANK0     11     9      2
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     181
                                              2 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     412
                                              0 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     314
                                              2 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     682
                                              8 COMMON     2     0      2
                                              0 BANK0      6     6      0
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _mensaje
     _concat
       _atoi
         ___wmul
         _isdigit
       _sprintf
         __doprnt
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           _putch *
       _strcat
     _division
       ___awdiv
       ___awmod
     _printf
       __doprnt
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         _putch *
   _setup
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      68       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      5       F       7       18.8%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      68      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Aug 02 15:48:46 2021

                      pc 0002              _SSPSTATbits 0094             ___awdiv@sign 0021  
                     fsr 0004      ___wmul@multiplicand 0074                      l102 07E3  
                    l105 05CE                      l131 022B                      l140 076F  
                    l124 018F                      l116 0176                      l109 0161  
                    l134 0FEE                      l137 0FF6                      l171 03E1  
                    l172 03E6                      l181 0FE6                      l175 03F9  
                    l441 06EE                      l178 03FF                      l275 0397  
                    l428 0637                      l277 03AF                      l189 0FFF  
                    l547 0732                      l557 07AB                      l806 038A  
                    l743 03F8                      l752 07FE                      l738 0563  
                    l790 0361                      l797 03D0                      u700 06F7  
                    u701 06F6                      u720 0709                      u721 0708  
                    u715 06FB                      u740 071A                      u741 0719  
                    u830 0391                      u831 0390                      u735 070A  
                    u760 072E                      u761 072D                      u745 0716  
                    u690 0FF4                      u755 0722                      u691 0FF3  
                    u860 03AB                      u861 03AA                      u845 0398  
                    u870 03EF                      u855 039F                      u871 03EE  
                    u880 03F5                      u881 03F4                      u990 0374  
                    u991 0373                      _dec 00A7                      _cen 006A  
                    _con 00A4                      _isr 0FE7                      _var 00A5  
                    fsr0 0004                      _uni 00A6                      indf 0000  
           ___awmod@sign 0078                     l2000 0295                     l2010 02B3  
                   l2020 02E0                     l2012 02BD                     l2100 05DD  
                   l2030 0332                     l2014 02C3                     l2022 02E6  
                   l2006 0297                     l2110 05F2                     l2102 05E1  
                   l2032 033A                     l2024 02ED                     l2016 02CB  
                   l2120 0615                     l2112 05F5                     l2104 05E6  
                   l2200 00E5                     l2026 031D                     l2034 0340  
                   l2018 02D8                     l2050 03B8                     l2130 062E  
                   l2122 061B                     l2114 05FC                     l2106 05EA  
                   l2210 010D                     l2202 00E9                     l2060 04E5  
                   l2028 0325                     l2036 034B                     l2052 03BC  
                   l2132 0633                     l2124 061C                     l2116 0600  
                   l2108 05EC                     l2140 05C4                     l2220 0147  
                   l2212 011B                     l2204 00F7                     l1510 03A5  
                   l1502 038B                     l2070 0505                     l2062 04E9  
                   l2038 035F                     l2054 03CA                     l2046 03B3  
                   l2126 0623                     l2118 0604                     l2142 05C9  
                   l2150 07F0                     l2222 015B                     l2214 011F  
                   l2206 00FB                     l1512 03AB                     l1504 038D  
                   l1520 03EF                     l2080 0540                     l2072 050E  
                   l2064 04F2                     l2048 03B7                     l2160 076B  
                   l2128 0629                     l2136 0565                     l2144 07E7  
                   l2240 01AA                     l2232 0189                     l2224 0167  
                   l2216 012D                     l2208 0109                     l1506 0391  
                   l1522 03F5                     l2082 054C                     l2074 0516  
                   l2066 04FA                     l2058 04E4                     l1450 0FF4  
                   l2154 0733                     l2138 05BF                     l2146 07E8  
                   l2242 01B2                     l2234 0193                     l2226 0170  
                   l2218 0141                     l2170 004B                     l2250 063D  
                   l1508 039E                     l1524 03F7                     l1516 03E8  
                   l2084 0553                     l2076 051B                     l2068 04FD  
                   l1460 06FA                     l1620 037D                     l1612 0363  
                   l2156 0753                     l2092 05CF                     l1700 0696  
                   l2148 07EC                     l2244 020B                     l2236 01A2  
                   l2228 017A                     l2180 007D                     l2172 0059  
                   l2164 002F                     l2260 0674                     l2252 0640  
                   l1518 03E9                     l1470 0720                     l1462 0701  
                   l1454 06EF                     l1614 0368                     l2158 075F  
                   l2094 05D2                     l1710 06A6                     l1702 0697  
                   l2246 0219                     l2190 00A7                     l2182 0081  
                   l2174 005D                     l2166 0037                     l2262 067C  
                   l2254 0648                     l2088 055F                     l1472 0721  
                   l1464 0705                     l1456 06F1                     l1448 0FEE  
                   l1616 036C                     l2096 05D6                     l1720 06BF  
                   l1712 06AB                     l1704 069B                     l2192 00B5  
                   l2184 008F                     l2176 006B                     l2168 0045  
                   l1800 07D4                     l2264 0684                     l2256 064E  
                   l2248 0638                     l1474 0728                     l1466 0709  
                   l1458 06F7                     l2290 026F                     l1618 0375  
                   l2098 05DB                     l1722 06C3                     l1714 06B1  
                   l1730 06E0                     l1706 06A0                     l2194 00BB  
                   l2186 0093                     l2178 006F                     l1810 07DD  
                   l1802 07D5                     l2266 0687                     l2258 065A  
                   l1468 071A                     l1476 072E                     l1732 06E5  
                   l1724 06CD                     l1716 06B4                     l1708 06A2  
                   l2196 00C3                     l2188 00A1                     l1740 03D9  
                   l1812 07E0                     l1804 07D8                     l1820 0FF7  
                   l2268 068C                     l1734 06EA                     l1726 06D3  
                   l1718 06BB                     l2198 00D7                     l1742 03DB  
                   l1814 07E1                     l1806 07D9                     l1822 0FFC  
                   l1728 06DA                     l1744 03DD                     l1816 07E2  
                   l1808 07DC                     l1746 03E0                     l1738 03D2  
                   l1818 0FE2                     l1780 07B0                     l1790 07C7  
                   l1782 07B9                     l1960 0786                     l1952 0770  
                   l1792 07CA                     l1784 07BA                     l1776 03F9  
                   l1962 078A                     l1954 0778                     l1970 07A7  
                   l1794 07CE                     l1786 07C3                     l1778 07AC  
                   l1964 0794                     l1956 077B                     l1980 023E  
                   l1796 07D0                     l1788 07C6                     l1966 079A  
                   l1958 0782                     l1990 025D                     l1982 024D  
                   l1974 022F                     l1798 07D3                     l1968 07A1  
                   l1992 027A                     l1984 0255                     l1976 0230  
                   l1994 0288                     l1978 0236                     l1986 025C  
                   l1996 028C                     l1998 0290                     ?_isr 0070  
                   STR_1 04A7                     STR_2 04DE                     STR_3 04A5  
                   STR_4 0488                     STR_5 04DE                     STR_6 04A5  
                   STR_7 044E                     STR_8 0410                     STR_9 04C5  
                   u1000 038A                     u1001 0389                     u1210 06C3  
                   u1211 06C2                     u1220 06CD                     u1221 06CC  
                   u1205 06B5                     u1400 0794                     u1240 06E0  
                   u1401 0793                     u1241 06DF                     u1225 06C9  
                   u1250 06E5                     u1170 069B                     u1251 06E4  
                   u1235 06D4                     u1171 069A                     u1420 07A7  
                   u1500 0325                     u1180 06A6                     u1260 03D9  
                   u1421 07A6                     u1405 0790                     u1501 0324  
                   u1181 06A5                     u1261 03D8                     u1510 034B  
                   u1430 0236                     u1190 06B1                     u1270 03FF  
                   u1415 079B                     u1511 034A                     u1431 0235  
                   u1191 06B0                     u1271 03FE                     u1520 035F  
                   u1440 023E                     u1600 05E1                     u1521 035E  
                   u1441 023D                     u1601 05E0                     u1530 04F2  
                   u1370 0778                     u1450 028C                     u1610 05F2  
                   u1531 04F1                     u1371 0777                     u1451 028B  
                   u1611 05F1                     u1540 04FA                     u1460 02B2  
                   u1700 0176                     u1541 04F9                     u1461 02B1  
                   u1701 0175                     u1550 0505                     u1390 078A  
                   u1470 02BD                     u1630 0604                     u1710 017A  
                   u1551 0504                     u1391 0789                     u1471 02BC  
                   u1631 0603                     u1711 0179                     u1560 0516  
                   u1480 02C3                     u1720 0189                     u1561 0515  
                   u1385 077C                     u1481 02C2                     u1465 02AE  
                   u1625 05F6                     u1721 0188                     u1570 054C  
                   u1490 02CB                     u1650 0615                     u1730 018F  
                   u1571 054B                     u1491 02CA                     u1651 0614  
                   u1731 018E                     u1580 0553                     u1740 0193  
                   u1581 0552                     u1645 0605                     u1741 0192  
                   u1670 0629                     u1590 05D6                     u1750 01A2  
                   u1671 0628                     u1655 0611                     u1591 05D5  
                   u1751 01A1                     u1807 0678                     u1680 062E  
                   u1760 01AA                     u1681 062D                     u1665 061D  
                   u1761 01A9                     u1817 0680                     u1770 01B2  
                   u1690 0167                     u1771 01B1                     u1691 0166  
                   u1907 00DF                     u1827 003F                     u1917 00F1  
                   u1837 0053                     u1927 0103                     u1847 0065  
                   u1937 0115                     u1857 0077                     u1947 0127  
                   u1867 0089                     u1787 0644                     u1957 013B  
                   u1877 009B                     u1797 065E                     u1967 0155  
                   u1887 00AF                     u1977 0213                     u1897 00CB  
                   _RCIF 0065                     i1l91 0FE7                     _TXIF 0064  
                   _atoi 04E1                     _main 0638                     _full 00A0  
                   _pot1 00A9                     _pot2 00A8                     _tens 007A  
                   btemp 007E                     start 000C                    ??_isr 0070  
                  ?_atoi 0078                    ?_main 0070          __end_of___awdiv 0638  
                  STR_10 04DB                    STR_11 04DB          __end_of___awmod 06EF  
                  _ANSEL 0188          ___awdiv@divisor 0072          __end_of___lwdiv 0733  
        __end_of___lwmod 07AC          ___awdiv@counter 0020                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008          __end_of__doprnt 0362                    _TRISB 0086  
                  _TXREG 0019          __end_of_dpowers 0410          __end_of_isdigit 03F9  
        __end_of_mensaje 022C                    atoi@a 0023                    _setup 07AC  
                  atoi@s 0025                    _putch 0FEE                    fpbase 002B  
                  _units 006C                    pclath 000A          __end_of_spiInit 03E7  
        __end_of_spiRead 1000                    status 0003                    wtemp0 007E  
        __end_of_sprintf 03D1          __initialization 000F             __end_of_atoi 0564  
           __end_of_main 0696                   ??_atoi 0020                   ??_main 0069  
       ___awdiv@dividend 0074                   ?_setup 0070                   ?_putch 0072  
                 _ANSELH 0189                   _SPBRGH 009A                   _TRISC2 043A  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of__fptable 002F         __end_of_division 05CF  
                 ___wmul 038B                ??___awdiv 0076                ??___awmod 0076  
              ??___lwdiv 0076                ??___lwmod 0024                   _concat 0733  
              ??__doprnt 0028         ___awdiv@quotient 0022          ___awmod@divisor 0072  
           __doprnt@flag 002B          ___awmod@counter 0077                   _printf 07E4  
           __doprnt@prec 002C                   _strcat 0362                   fptable 0026  
                 fptotal 0002                ??_isdigit 0072                ??_mensaje 00AA  
                 saved_w 007E         __end_of_spiWrite 0FE7                ??_spiInit 0075  
              ??_spiRead 0072                ??_sprintf 0034  __end_of__initialization 0022  
         __pcstackCOMMON 0070            __end_of_setup 07E4            __end_of_putch 0FF7  
          division@valor 0079               __doprnt@ap 0027               __doprnt@pb 0030  
                ??_setup 0076                  ??_putch 0073               __pbssBANK0 006A  
             __pbssBANK1 00A0               __pmaintext 0638                  ?___wmul 0072  
             __pintentry 0004                  ?_concat 003A  __size_of_spiReceiveWait 0007  
                ?_printf 0031                  ?_strcat 0072                  _SSPSTAT 0094  
             __stringtab 0400                ?_division 0070                ?_spiWrite 0070  
                ___awdiv 05CF                  ___awmod 0696          __size_of___wmul 0025  
                ___lwdiv 06EF                  ___lwmod 0770          __size_of_concat 003D  
                __doprnt 022C                  __ptext1 0FE1                  __ptext2 0FF7  
                __ptext3 03F9                  __ptext4 07AC                  __ptext5 03D1  
                __ptext6 002F                  __ptext7 07E4                  __ptext8 0564  
                __ptext9 0696          __size_of_printf 001B          __size_of_strcat 0029  
                _dpowers 0406                  _isdigit 03E7             __size_of_isr 0007  
                _mensaje 002F         ___awmod@dividend 0074                  _residuo 006B  
                _spiInit 03D1                  _spiRead 0FF7                  concat@a 003A  
                concat@b 003C                  concat@c 0067                  _sprintf 03B0  
   end_of_initialization 0022               ??_division 0024                _RCSTAbits 0018  
                printf@f 0036               ??_spiWrite 0072                _PORTCbits 0007  
            spiWrite@dat 0072                _TXSTAbits 0098           _spiReceiveWait 03F9  
         __end_of___wmul 03B0              _BAUDCTLbits 0187           __end_of_concat 0770  
         __end_of_printf 07FF           __end_of_strcat 038B      start_initialization 000F  
            __end_of_isr 0FEE   __end_of_spiReceiveWait 0400                 ??___wmul 0076  
            __doprnt@val 002D                 ??_concat 003E                 ??_printf 0033  
               ??_strcat 0073              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020            __pcstackBANK1 00AA        __size_of__fptable 0009  
           _isdigit$1034 0072                __doprnt@c 002F                __doprnt@f 0026  
      __size_of_division 006B         ___lwdiv@dividend 0074          ?_spiReceiveWait 0070  
              __pfunctab 0026                 ?___awdiv 0072                 ?___awmod 0072  
               ?___lwdiv 0072                 ?___lwmod 0020                 ?__doprnt 0026  
      __size_of_spiWrite 0006                __pstrings 0400                 ?_isdigit 0070  
               ?_mensaje 0070                 ?_spiInit 0072                 ?_spiRead 0070  
       ___lwdiv@quotient 0077                 ?_sprintf 0031           __size_of_setup 0038  
         __size_of_putch 0009     spiInit@sTransmitEdge 0074        interrupt_function 0004  
         ___wmul@product 0076       spiInit@sDataSample 0072                 _PIR1bits 000C  
             _ADCON0bits 001F              __stringbase 0405               _ADCON1bits 009F  
      ___wmul@multiplier 0072         __size_of___awdiv 0069         __size_of___awmod 0059  
       __size_of___lwdiv 0044         __size_of___lwmod 003C         __size_of__doprnt 0136  
     __end_of__stringtab 0406                 __fptable 0026               strcat@from 0072  
       __size_of_isdigit 0012         __size_of_mensaje 01FD          ___lwdiv@divisor 0072  
        ___lwdiv@counter 0079                 __ptext10 05CF                 __ptext11 0733  
               __ptext20 038B                 __ptext12 0362                 __ptext21 0FE7  
               __ptext13 03B0                 __ptext14 022C                 __ptext15 0FEE  
               __ptext16 0770                 __ptext17 06EF                 __ptext18 04E1  
               __ptext19 03E7         __size_of_spiInit 0016         __size_of_spiRead 0009  
               _division 0564                 _contador 00A2         __size_of_sprintf 0021  
          __size_of_atoi 0083            __size_of_main 005E                 _hundreds 007B  
               _spiWrite 0FE1                 concat@s1 0053                 concat@s2 003F  
           spiInit@sType 0075                 atoi@sign 0022                 fp__putch 002C  
      spiInit@sClockIdle 0073                putch@data 0072                 isdigit@c 0073  
               intlevel1 0026                sprintf@ap 0037                sprintf@pb 0038  
              sprintf@wh 0036         ___lwmod@dividend 0022         ??_spiReceiveWait 0072  
              stringcode 0400               _OSCCONbits 008F                 printf@ap 0035  
               printf@pb 0037                 sprintf@f 0031                 strcat@cp 0075  
               strcat@to 0074          ___lwmod@divisor 0020          ___lwmod@counter 0025  
               stringdir 0400                 stringtab 0400  
